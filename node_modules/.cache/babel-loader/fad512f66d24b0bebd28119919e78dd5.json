{"ast":null,"code":"var _jsxFileName = \"/Users/Vitaliy/Desktop/web/react/todoo/src/Components/Tasks/Tasks.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './Tasks.scss';\nimport Button from '../../UI/Button/Button';\nimport Task from '../Task/Task';\nimport PostService from '../../API/PostServise';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Tasks(_ref) {\n  _s();\n\n  let {\n    lists,\n    allTasks,\n    setAllTasks,\n    chosenList\n  } = _ref;\n  const [newTask, setNewTask] = useState('');\n\n  const addTask = () => {\n    setLists(lsits[chosenList]);\n    PostService.postTask({\n      listId: chosenList.id,\n      value: newTask\n    });\n    setNewTask('');\n  };\n\n  const categoryTitle = () => {\n    if (chosenList.id) {\n      return chosenList.title;\n    } else {\n      return 'All';\n    }\n  };\n\n  const renderTasks = () => {\n    if (chosenList) {\n      return lists.map(list => list.tasks.map(task => task.listId === chosenList.id ? /*#__PURE__*/_jsxDEV(Task, {\n        task: task,\n        chosenList: chosenList\n      }, task.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 19\n      }, this) : ''));\n    } else {\n      return lists.map(list => list.tasks.map(task => /*#__PURE__*/_jsxDEV(Task, {\n        task: task,\n        chosenList: chosenList,\n        lists: lists\n      }, task.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 16\n      }, this)));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tasks\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"tasks__title\",\n      children: categoryTitle()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: newTask,\n      onChange: e => setNewTask(e.target.value),\n      className: \"tasks__input input\",\n      type: \"text\",\n      placeholder: `Create task on '${categoryTitle()}' category`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: addTask,\n      title: 'Create new task',\n      className: 'new-task-btn'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n      className: \"tasks__line\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 10\n    }, this), renderTasks()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 7\n  }, this);\n}\n\n_s(Tasks, \"QOAGQFXMDiH3FEIJhH0k9gfFdKU=\");\n\n_c = Tasks;\nexport default Tasks;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tasks\");","map":{"version":3,"names":["React","useState","Button","Task","PostService","Tasks","lists","allTasks","setAllTasks","chosenList","newTask","setNewTask","addTask","setLists","lsits","postTask","listId","id","value","categoryTitle","title","renderTasks","map","list","tasks","task","e","target"],"sources":["/Users/Vitaliy/Desktop/web/react/todoo/src/Components/Tasks/Tasks.jsx"],"sourcesContent":["import React, { useState } from 'react'\nimport './Tasks.scss'\nimport Button from '../../UI/Button/Button'\nimport Task from '../Task/Task'\nimport PostService from '../../API/PostServise'\n\n\n\nfunction Tasks({ lists, allTasks, setAllTasks, chosenList }) {\n   const [newTask, setNewTask] = useState('')\n\n   const addTask = () => {\n      setLists(lsits[chosenList])\n      PostService.postTask({\n         listId: chosenList.id,\n         value: newTask,\n      })\n      setNewTask('')\n   }\n\n   const categoryTitle = () => {\n      if (chosenList.id) {\n         return chosenList.title\n      } else {\n         return 'All'\n      }\n   }\n\n\n\n   const renderTasks = () => {\n      if (chosenList) {\n         return (\n            lists.map(list => list.tasks.map(task =>\n               task.listId === chosenList.id ?\n                  <Task\n                     key={task.id}\n                     task={task}\n                     chosenList={chosenList}\n                  /> : ''\n            ))\n         )\n      } else {\n         return (\n            lists.map(list => list.tasks.map(task =>\n               < Task\n                  key={task.id}\n                  task={task}\n                  chosenList={chosenList}\n                  lists={lists}\n               />\n            ))\n         )\n\n      }\n\n   }\n\n  \n\n   return (\n      <div className='tasks' >\n         <h1 className='tasks__title' >\n            {categoryTitle()}\n         </h1>\n\n         <input\n            value={newTask}\n            onChange={e => setNewTask(e.target.value)}\n            className='tasks__input input'\n            type=\"text\"\n            placeholder={`Create task on '${categoryTitle()}' category`} />\n         <Button\n            onClick={addTask}\n            title={'Create new task'}\n            className={'new-task-btn'}\n         />\n         <hr className='tasks__line' />\n\n         {renderTasks()}\n      </div>\n   )\n}\n\nexport default Tasks"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,cAAP;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,IAAP,MAAiB,cAAjB;AACA,OAAOC,WAAP,MAAwB,uBAAxB;;;AAIA,SAASC,KAAT,OAA6D;EAAA;;EAAA,IAA9C;IAAEC,KAAF;IAASC,QAAT;IAAmBC,WAAnB;IAAgCC;EAAhC,CAA8C;EAC1D,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,EAAD,CAAtC;;EAEA,MAAMW,OAAO,GAAG,MAAM;IACnBC,QAAQ,CAACC,KAAK,CAACL,UAAD,CAAN,CAAR;IACAL,WAAW,CAACW,QAAZ,CAAqB;MAClBC,MAAM,EAAEP,UAAU,CAACQ,EADD;MAElBC,KAAK,EAAER;IAFW,CAArB;IAIAC,UAAU,CAAC,EAAD,CAAV;EACF,CAPD;;EASA,MAAMQ,aAAa,GAAG,MAAM;IACzB,IAAIV,UAAU,CAACQ,EAAf,EAAmB;MAChB,OAAOR,UAAU,CAACW,KAAlB;IACF,CAFD,MAEO;MACJ,OAAO,KAAP;IACF;EACH,CAND;;EAUA,MAAMC,WAAW,GAAG,MAAM;IACvB,IAAIZ,UAAJ,EAAgB;MACb,OACGH,KAAK,CAACgB,GAAN,CAAUC,IAAI,IAAIA,IAAI,CAACC,KAAL,CAAWF,GAAX,CAAeG,IAAI,IAClCA,IAAI,CAACT,MAAL,KAAgBP,UAAU,CAACQ,EAA3B,gBACG,QAAC,IAAD;QAEG,IAAI,EAAEQ,IAFT;QAGG,UAAU,EAAEhB;MAHf,GACQgB,IAAI,CAACR,EADb;QAAA;QAAA;QAAA;MAAA,QADH,GAKQ,EANO,CAAlB,CADH;IAUF,CAXD,MAWO;MACJ,OACGX,KAAK,CAACgB,GAAN,CAAUC,IAAI,IAAIA,IAAI,CAACC,KAAL,CAAWF,GAAX,CAAeG,IAAI,iBAClC,QAAE,IAAF;QAEG,IAAI,EAAEA,IAFT;QAGG,UAAU,EAAEhB,UAHf;QAIG,KAAK,EAAEH;MAJV,GACQmB,IAAI,CAACR,EADb;QAAA;QAAA;QAAA;MAAA,QADe,CAAlB,CADH;IAWF;EAEH,CA1BD;;EA8BA,oBACG;IAAK,SAAS,EAAC,OAAf;IAAA,wBACG;MAAI,SAAS,EAAC,cAAd;MAAA,UACIE,aAAa;IADjB;MAAA;MAAA;MAAA;IAAA,QADH,eAKG;MACG,KAAK,EAAET,OADV;MAEG,QAAQ,EAAEgB,CAAC,IAAIf,UAAU,CAACe,CAAC,CAACC,MAAF,CAAST,KAAV,CAF5B;MAGG,SAAS,EAAC,oBAHb;MAIG,IAAI,EAAC,MAJR;MAKG,WAAW,EAAG,mBAAkBC,aAAa,EAAG;IALnD;MAAA;MAAA;MAAA;IAAA,QALH,eAWG,QAAC,MAAD;MACG,OAAO,EAAEP,OADZ;MAEG,KAAK,EAAE,iBAFV;MAGG,SAAS,EAAE;IAHd;MAAA;MAAA;MAAA;IAAA,QAXH,eAgBG;MAAI,SAAS,EAAC;IAAd;MAAA;MAAA;MAAA;IAAA,QAhBH,EAkBIS,WAAW,EAlBf;EAAA;IAAA;IAAA;IAAA;EAAA,QADH;AAsBF;;GA1EQhB,K;;KAAAA,K;AA4ET,eAAeA,KAAf"},"metadata":{},"sourceType":"module"}