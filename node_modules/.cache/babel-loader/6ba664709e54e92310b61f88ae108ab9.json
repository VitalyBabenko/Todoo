{"ast":null,"code":"var _jsxFileName = \"/Users/Vitaliy/Desktop/web/react/todoo/src/UI/Checkbox/Checkbox.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { TaskServiсe } from '../../API/Serviсe';\nimport './Checkbox.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Checkbox(_ref) {\n  _s();\n\n  let {\n    task\n  } = _ref;\n  const [isDone, setIsDone] = useState();\n\n  const toggleDoneParram = () => {\n    console.log(task);\n    setIsDone(!isDone);\n    task.done = isDone;\n    console.log(task); // TaskServiсe.changeDoneParam(task)\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      id: task.id,\n      checked: isDone,\n      onChange: toggleDoneParram,\n      className: \"checkbox\",\n      type: \"checkbox\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: task.id,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"check-mark\",\n        src: \"/img/check.svg\",\n        alt: \"checkMark\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 7\n  }, this);\n}\n\n_s(Checkbox, \"TxjiBuZrVWV1vWPlrIDXchgCY78=\");\n\n_c = Checkbox;\nexport default Checkbox;\n\nvar _c;\n\n$RefreshReg$(_c, \"Checkbox\");","map":{"version":3,"names":["React","useState","TaskServiсe","Checkbox","task","isDone","setIsDone","toggleDoneParram","console","log","done","id"],"sources":["/Users/Vitaliy/Desktop/web/react/todoo/src/UI/Checkbox/Checkbox.jsx"],"sourcesContent":["import React, { useState } from 'react'\nimport { TaskServiсe } from '../../API/Serviсe'\nimport './Checkbox.scss'\n\nfunction Checkbox({ task }) {\n\n   const [isDone, setIsDone] = useState()\n\n\n\n   const toggleDoneParram = () => {\n      console.log(task)\n      setIsDone(!isDone)\n      task.done = isDone\n      console.log(task)\n      // TaskServiсe.changeDoneParam(task)\n   }\n\n   return (\n      <div >\n         <input id={task.id} checked={isDone} onChange={toggleDoneParram} className='checkbox' type=\"checkbox\" />\n         <label htmlFor={task.id}>\n            <img className='check-mark' src=\"/img/check.svg\" alt=\"checkMark\" />\n         </label>\n      </div>\n   )\n}\n\nexport default Checkbox"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,QAA4B,mBAA5B;AACA,OAAO,iBAAP;;;AAEA,SAASC,QAAT,OAA4B;EAAA;;EAAA,IAAV;IAAEC;EAAF,CAAU;EAEzB,MAAM,CAACC,MAAD,EAASC,SAAT,IAAsBL,QAAQ,EAApC;;EAIA,MAAMM,gBAAgB,GAAG,MAAM;IAC5BC,OAAO,CAACC,GAAR,CAAYL,IAAZ;IACAE,SAAS,CAAC,CAACD,MAAF,CAAT;IACAD,IAAI,CAACM,IAAL,GAAYL,MAAZ;IACAG,OAAO,CAACC,GAAR,CAAYL,IAAZ,EAJ4B,CAK5B;EACF,CAND;;EAQA,oBACG;IAAA,wBACG;MAAO,EAAE,EAAEA,IAAI,CAACO,EAAhB;MAAoB,OAAO,EAAEN,MAA7B;MAAqC,QAAQ,EAAEE,gBAA/C;MAAiE,SAAS,EAAC,UAA3E;MAAsF,IAAI,EAAC;IAA3F;MAAA;MAAA;MAAA;IAAA,QADH,eAEG;MAAO,OAAO,EAAEH,IAAI,CAACO,EAArB;MAAA,uBACG;QAAK,SAAS,EAAC,YAAf;QAA4B,GAAG,EAAC,gBAAhC;QAAiD,GAAG,EAAC;MAArD;QAAA;QAAA;QAAA;MAAA;IADH;MAAA;MAAA;MAAA;IAAA,QAFH;EAAA;IAAA;IAAA;IAAA;EAAA,QADH;AAQF;;GAtBQR,Q;;KAAAA,Q;AAwBT,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}