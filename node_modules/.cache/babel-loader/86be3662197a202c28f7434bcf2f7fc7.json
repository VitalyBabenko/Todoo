{"ast":null,"code":"var _jsxFileName = \"/Users/Vitaliy/Desktop/web/react/todoo/src/Components/Tasks/Tasks.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from 'react';\nimport { TodoContext } from '../context';\nimport './Tasks.scss';\nimport Button from '../../UI/Button/Button';\nimport Task from '../Task/Task';\nimport { TaskServiсe, ListServiсe } from '../../API/Serviсe';\nimport { useFetching } from '../../hooks/useFetching';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Tasks() {\n  _s();\n\n  const {\n    lists,\n    setLists,\n    chosenList,\n    setChosenList,\n    currentPage\n  } = useContext(TodoContext);\n  const [newTask, setNewTask] = useState({\n    value: ''\n  });\n  const [addTask, addTaskLoading] = useFetching(async () => {\n    await TaskServiсe.postTask(newTask);\n    const updatedList = await ListServiсe.getLists();\n    await setLists(updatedList);\n    updatedList.forEach(list => list.id === chosenList.id ? setChosenList(list) : '');\n    setNewTask({\n      value: '',\n      listId: null\n    });\n  });\n\n  const deleteTask = async deletedTask => {\n    const newList = lists.map(list => {\n      if (list.id === deletedTask.listId) {\n        list.tasks = list.tasks.filter(task => task.id !== deletedTask.id);\n      }\n\n      return list;\n    });\n    setLists(newList);\n    await TaskServiсe.deleteTask(deletedTask);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tasks\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"tasks__title\",\n      children: chosenList.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: newTask.value,\n      onChange: e => setNewTask({\n        value: e.target.value,\n        listId: currentPage\n      }),\n      className: \"tasks__input input\",\n      type: \"text\",\n      placeholder: `Create task on '${chosenList.title}' category`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 10\n    }, this), newTask.value && /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => addTask(newTask),\n      title: 'Create new task',\n      className: addTaskLoading ? 'loader new-task-btn' : 'new-task-btn'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n      className: \"tasks__line\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), currentPage !== 1 ? chosenList.tasks.map(task => /*#__PURE__*/_jsxDEV(Task, {\n      task: task,\n      deleteTask: () => deleteTask(task)\n    }, task.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 16\n    }, this)) : lists.map(list => list.tasks.map(task => /*#__PURE__*/_jsxDEV(Task, {\n      task: task,\n      title: list.title,\n      list: list,\n      deleteTask: () => deleteTask(task)\n    }, task.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 16\n    }, this)))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 7\n  }, this);\n}\n\n_s(Tasks, \"fJn1sOZtwDImv6NoNU98rG/eYoE=\", false, function () {\n  return [useFetching];\n});\n\n_c = Tasks;\nexport default Tasks;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tasks\");","map":{"version":3,"names":["React","useState","useContext","TodoContext","Button","Task","TaskServiсe","ListServiсe","useFetching","Tasks","lists","setLists","chosenList","setChosenList","currentPage","newTask","setNewTask","value","addTask","addTaskLoading","postTask","updatedList","getLists","forEach","list","id","listId","deleteTask","deletedTask","newList","map","tasks","filter","task","title","e","target"],"sources":["/Users/Vitaliy/Desktop/web/react/todoo/src/Components/Tasks/Tasks.jsx"],"sourcesContent":["import React, { useState, useContext } from 'react'\nimport { TodoContext } from '../context'\nimport './Tasks.scss'\nimport Button from '../../UI/Button/Button'\nimport Task from '../Task/Task'\nimport { TaskServiсe, ListServiсe } from '../../API/Serviсe'\nimport { useFetching } from '../../hooks/useFetching'\n\n\nfunction Tasks() {\n   const { lists, setLists, chosenList, setChosenList, currentPage } = useContext(TodoContext)\n   const [newTask, setNewTask] = useState({ value: '' })\n\n   const [addTask, addTaskLoading] = useFetching(async () => {\n      await TaskServiсe.postTask(newTask)\n      const updatedList = await ListServiсe.getLists()\n      await setLists(updatedList)\n      updatedList.forEach(list => list.id === chosenList.id ? setChosenList(list) : '')\n      setNewTask({ value: '', listId: null })\n   })\n\n   const deleteTask = async (deletedTask) => {\n      const newList =\n         lists.map(list => {\n            if (list.id === deletedTask.listId) {\n               list.tasks = list.tasks.filter(task => task.id !== deletedTask.id)\n            }\n            return list\n         })\n      setLists(newList)\n      await TaskServiсe.deleteTask(deletedTask)\n   }\n\n   return (\n      <div className='tasks' >\n         <h1 className='tasks__title' >\n            {chosenList.title}\n         </h1>\n\n         <input\n            value={newTask.value}\n            onChange={e => setNewTask({ value: e.target.value, listId: currentPage })}\n            className='tasks__input input'\n            type=\"text\"\n            placeholder={`Create task on '${chosenList.title}' category`} />\n         {newTask.value &&\n            <Button\n               onClick={() => addTask(newTask)}\n               title={'Create new task'}\n               className={addTaskLoading ? 'loader new-task-btn' : 'new-task-btn'}\n            />}\n         <hr className='tasks__line' />\n            <ul></ul>\n         {currentPage !== 1 ?\n            chosenList.tasks.map(task =>\n               <Task\n                  key={task.id}\n                  task={task}\n                  deleteTask={() => deleteTask(task)}\n               />)\n            :\n            lists.map(list => list.tasks.map(task =>\n               <Task\n                  key={task.id}\n                  task={task}\n                  title={list.title}\n                  list={list}\n                  deleteTask={() => deleteTask(task)}\n               />))\n         }\n      </div>\n   )\n}\n\nexport default Tasks"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AACA,SAASC,WAAT,QAA4B,YAA5B;AACA,OAAO,cAAP;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,IAAP,MAAiB,cAAjB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,mBAAzC;AACA,SAASC,WAAT,QAA4B,yBAA5B;;;AAGA,SAASC,KAAT,GAAiB;EAAA;;EACd,MAAM;IAAEC,KAAF;IAASC,QAAT;IAAmBC,UAAnB;IAA+BC,aAA/B;IAA8CC;EAA9C,IAA8DZ,UAAU,CAACC,WAAD,CAA9E;EACA,MAAM,CAACY,OAAD,EAAUC,UAAV,IAAwBf,QAAQ,CAAC;IAAEgB,KAAK,EAAE;EAAT,CAAD,CAAtC;EAEA,MAAM,CAACC,OAAD,EAAUC,cAAV,IAA4BX,WAAW,CAAC,YAAY;IACvD,MAAMF,WAAW,CAACc,QAAZ,CAAqBL,OAArB,CAAN;IACA,MAAMM,WAAW,GAAG,MAAMd,WAAW,CAACe,QAAZ,EAA1B;IACA,MAAMX,QAAQ,CAACU,WAAD,CAAd;IACAA,WAAW,CAACE,OAAZ,CAAoBC,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYb,UAAU,CAACa,EAAvB,GAA4BZ,aAAa,CAACW,IAAD,CAAzC,GAAkD,EAA9E;IACAR,UAAU,CAAC;MAAEC,KAAK,EAAE,EAAT;MAAaS,MAAM,EAAE;IAArB,CAAD,CAAV;EACF,CAN4C,CAA7C;;EAQA,MAAMC,UAAU,GAAG,MAAOC,WAAP,IAAuB;IACvC,MAAMC,OAAO,GACVnB,KAAK,CAACoB,GAAN,CAAUN,IAAI,IAAI;MACf,IAAIA,IAAI,CAACC,EAAL,KAAYG,WAAW,CAACF,MAA5B,EAAoC;QACjCF,IAAI,CAACO,KAAL,GAAaP,IAAI,CAACO,KAAL,CAAWC,MAAX,CAAkBC,IAAI,IAAIA,IAAI,CAACR,EAAL,KAAYG,WAAW,CAACH,EAAlD,CAAb;MACF;;MACD,OAAOD,IAAP;IACF,CALD,CADH;IAOAb,QAAQ,CAACkB,OAAD,CAAR;IACA,MAAMvB,WAAW,CAACqB,UAAZ,CAAuBC,WAAvB,CAAN;EACF,CAVD;;EAYA,oBACG;IAAK,SAAS,EAAC,OAAf;IAAA,wBACG;MAAI,SAAS,EAAC,cAAd;MAAA,UACIhB,UAAU,CAACsB;IADf;MAAA;MAAA;MAAA;IAAA,QADH,eAKG;MACG,KAAK,EAAEnB,OAAO,CAACE,KADlB;MAEG,QAAQ,EAAEkB,CAAC,IAAInB,UAAU,CAAC;QAAEC,KAAK,EAAEkB,CAAC,CAACC,MAAF,CAASnB,KAAlB;QAAyBS,MAAM,EAAEZ;MAAjC,CAAD,CAF5B;MAGG,SAAS,EAAC,oBAHb;MAIG,IAAI,EAAC,MAJR;MAKG,WAAW,EAAG,mBAAkBF,UAAU,CAACsB,KAAM;IALpD;MAAA;MAAA;MAAA;IAAA,QALH,EAWInB,OAAO,CAACE,KAAR,iBACE,QAAC,MAAD;MACG,OAAO,EAAE,MAAMC,OAAO,CAACH,OAAD,CADzB;MAEG,KAAK,EAAE,iBAFV;MAGG,SAAS,EAAEI,cAAc,GAAG,qBAAH,GAA2B;IAHvD;MAAA;MAAA;MAAA;IAAA,QAZN,eAiBG;MAAI,SAAS,EAAC;IAAd;MAAA;MAAA;MAAA;IAAA,QAjBH,eAkBM;MAAA;MAAA;MAAA;IAAA,QAlBN,EAmBIL,WAAW,KAAK,CAAhB,GACEF,UAAU,CAACmB,KAAX,CAAiBD,GAAjB,CAAqBG,IAAI,iBACtB,QAAC,IAAD;MAEG,IAAI,EAAEA,IAFT;MAGG,UAAU,EAAE,MAAMN,UAAU,CAACM,IAAD;IAH/B,GACQA,IAAI,CAACR,EADb;MAAA;MAAA;MAAA;IAAA,QADH,CADF,GAQEf,KAAK,CAACoB,GAAN,CAAUN,IAAI,IAAIA,IAAI,CAACO,KAAL,CAAWD,GAAX,CAAeG,IAAI,iBAClC,QAAC,IAAD;MAEG,IAAI,EAAEA,IAFT;MAGG,KAAK,EAAET,IAAI,CAACU,KAHf;MAIG,IAAI,EAAEV,IAJT;MAKG,UAAU,EAAE,MAAMG,UAAU,CAACM,IAAD;IAL/B,GACQA,IAAI,CAACR,EADb;MAAA;MAAA;MAAA;IAAA,QADe,CAAlB,CA3BN;EAAA;IAAA;IAAA;IAAA;EAAA,QADH;AAuCF;;GA/DQhB,K;UAI4BD,W;;;KAJ5BC,K;AAiET,eAAeA,KAAf"},"metadata":{},"sourceType":"module"}