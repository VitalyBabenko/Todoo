{"ast":null,"code":"var _jsxFileName = \"/Users/Vitaliy/Desktop/web/react/todoo/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Categories from \"./Components/Categories/Categories\";\nimport { ListServiсe } from \"./API/Serviсe\";\nimport Tasks from \"./Components/Tasks/Tasks\";\nimport { TodoContext } from './Components/context';\nimport { Route, Routes, useLocation, useNavigate } from 'react-router-dom';\nimport { useFetching } from \"./hooks/useFetching.js\";\nimport { TasksLoader, CategoriesLoader } from \"./Components/Loader/Loader\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [lists, setLists] = useState([]);\n  const [chosenList, setChosenList] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [fetchData, error] = useFetching(async () => {\n    const listResponse = await ListServiсe.getLists();\n    setLists(listResponse);\n    setChosenList(listResponse[0]);\n    navigate(`/lists/1`);\n    setIsLoading(false);\n  });\n  let location = useLocation();\n  const currentPage = +location.pathname.split('/').slice(-1);\n  let navigate = useNavigate();\n  useEffect(() => {\n    fetchData();\n  }, [], [lists, currentPage]);\n  return /*#__PURE__*/_jsxDEV(TodoContext.Provider, {\n    value: {\n      lists,\n      setLists,\n      chosenList,\n      setChosenList,\n      currentPage,\n      navigate\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app\",\n      children: isLoading ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(CategoriesLoader, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TasksLoader, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Categories, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Routes, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/lists/1\",\n            element: /*#__PURE__*/_jsxDEV(Tasks, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 47\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this), lists.map(list => /*#__PURE__*/_jsxDEV(Route, {\n            path: `lists/${list.id}`,\n            element: /*#__PURE__*/_jsxDEV(Tasks, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 28\n            }, this)\n          }, list.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"LcZ862PKCxl6midgAzbzJTAWQBA=\", false, function () {\n  return [useFetching, useLocation, useNavigate];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Categories","ListServiсe","Tasks","TodoContext","Route","Routes","useLocation","useNavigate","useFetching","TasksLoader","CategoriesLoader","App","lists","setLists","chosenList","setChosenList","isLoading","setIsLoading","fetchData","error","listResponse","getLists","navigate","location","currentPage","pathname","split","slice","map","list","id"],"sources":["/Users/Vitaliy/Desktop/web/react/todoo/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Categories from \"./Components/Categories/Categories\";\nimport { ListServiсe } from \"./API/Serviсe\";\nimport Tasks from \"./Components/Tasks/Tasks\";\nimport { TodoContext } from './Components/context'\nimport { Route, Routes, useLocation, useNavigate } from 'react-router-dom'\nimport { useFetching } from \"./hooks/useFetching.js\";\nimport { TasksLoader, CategoriesLoader } from \"./Components/Loader/Loader\";\n\nfunction App() {\n  const [lists, setLists] = useState([])\n  const [chosenList, setChosenList] = useState([])\n  const [isLoading, setIsLoading] = useState(true)\n  const [fetchData, error] = useFetching(async () => {\n    const listResponse = await ListServiсe.getLists()\n    setLists(listResponse)\n    setChosenList(listResponse[0])\n    navigate(`/lists/1`)\n    setIsLoading(false)\n  })\n\n  let location = useLocation()\n  const currentPage = +location.pathname.split('/').slice(-1)\n  let navigate = useNavigate()\n\n  useEffect(() => {\n    fetchData()\n  }, [], [lists, currentPage])\n\n  return (\n    <TodoContext.Provider value={{\n      lists,\n      setLists,\n      chosenList,\n      setChosenList,\n      currentPage,\n      navigate,\n    }} >\n\n      <div className=\"app\">\n        {isLoading ?\n          <>\n            <CategoriesLoader />\n            <TasksLoader />\n          </>\n          :\n          <>\n            <Categories />\n            <Routes>\n              <Route path='/lists/1' element={<Tasks />} />\n              {lists.map(list =>\n                <Route\n                  key={list.id}\n                  path={`lists/${list.id}`}\n                  element={<Tasks />} />)}\n            </Routes>\n          </>\n        }\n      </div>\n    </TodoContext.Provider>\n  );\n}\n\nexport default App;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,UAAP,MAAuB,oCAAvB;AACA,SAASC,WAAT,QAA4B,eAA5B;AACA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,SAASC,WAAT,QAA4B,sBAA5B;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,WAAxB,EAAqCC,WAArC,QAAwD,kBAAxD;AACA,SAASC,WAAT,QAA4B,wBAA5B;AACA,SAASC,WAAT,EAAsBC,gBAAtB,QAA8C,4BAA9C;;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EACb,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBf,QAAQ,CAAC,EAAD,CAAlC;EACA,MAAM,CAACgB,UAAD,EAAaC,aAAb,IAA8BjB,QAAQ,CAAC,EAAD,CAA5C;EACA,MAAM,CAACkB,SAAD,EAAYC,YAAZ,IAA4BnB,QAAQ,CAAC,IAAD,CAA1C;EACA,MAAM,CAACoB,SAAD,EAAYC,KAAZ,IAAqBX,WAAW,CAAC,YAAY;IACjD,MAAMY,YAAY,GAAG,MAAMnB,WAAW,CAACoB,QAAZ,EAA3B;IACAR,QAAQ,CAACO,YAAD,CAAR;IACAL,aAAa,CAACK,YAAY,CAAC,CAAD,CAAb,CAAb;IACAE,QAAQ,CAAE,UAAF,CAAR;IACAL,YAAY,CAAC,KAAD,CAAZ;EACD,CANqC,CAAtC;EAQA,IAAIM,QAAQ,GAAGjB,WAAW,EAA1B;EACA,MAAMkB,WAAW,GAAG,CAACD,QAAQ,CAACE,QAAT,CAAkBC,KAAlB,CAAwB,GAAxB,EAA6BC,KAA7B,CAAmC,CAAC,CAApC,CAArB;EACA,IAAIL,QAAQ,GAAGf,WAAW,EAA1B;EAEAR,SAAS,CAAC,MAAM;IACdmB,SAAS;EACV,CAFQ,EAEN,EAFM,EAEF,CAACN,KAAD,EAAQY,WAAR,CAFE,CAAT;EAIA,oBACE,QAAC,WAAD,CAAa,QAAb;IAAsB,KAAK,EAAE;MAC3BZ,KAD2B;MAE3BC,QAF2B;MAG3BC,UAH2B;MAI3BC,aAJ2B;MAK3BS,WAL2B;MAM3BF;IAN2B,CAA7B;IAAA,uBASE;MAAK,SAAS,EAAC,KAAf;MAAA,UACGN,SAAS,gBACR;QAAA,wBACE,QAAC,gBAAD;UAAA;UAAA;UAAA;QAAA,QADF,eAEE,QAAC,WAAD;UAAA;UAAA;UAAA;QAAA,QAFF;MAAA,gBADQ,gBAMR;QAAA,wBACE,QAAC,UAAD;UAAA;UAAA;UAAA;QAAA,QADF,eAEE,QAAC,MAAD;UAAA,wBACE,QAAC,KAAD;YAAO,IAAI,EAAC,UAAZ;YAAuB,OAAO,eAAE,QAAC,KAAD;cAAA;cAAA;cAAA;YAAA;UAAhC;YAAA;YAAA;YAAA;UAAA,QADF,EAEGJ,KAAK,CAACgB,GAAN,CAAUC,IAAI,iBACb,QAAC,KAAD;YAEE,IAAI,EAAG,SAAQA,IAAI,CAACC,EAAG,EAFzB;YAGE,OAAO,eAAE,QAAC,KAAD;cAAA;cAAA;cAAA;YAAA;UAHX,GACOD,IAAI,CAACC,EADZ;YAAA;YAAA;YAAA;UAAA,QADD,CAFH;QAAA;UAAA;UAAA;UAAA;QAAA,QAFF;MAAA;IAPJ;MAAA;MAAA;MAAA;IAAA;EATF;IAAA;IAAA;IAAA;EAAA,QADF;AAgCD;;GApDQnB,G;UAIoBH,W,EAQZF,W,EAEAC,W;;;KAdRI,G;AAsDT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}