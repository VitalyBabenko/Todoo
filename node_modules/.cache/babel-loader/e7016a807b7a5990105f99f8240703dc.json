{"ast":null,"code":"var _jsxFileName = \"/Users/Vitaliy/Desktop/web/react/todoo/src/Components/Tasks/Tasks.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext, useEffect } from 'react';\nimport { TodoContext } from '../context';\nimport './Tasks.scss';\nimport Button from '../../UI/Button/Button';\nimport Task from '../Task/Task';\nimport { TaskServiсe, ListServiсe } from '../../API/Serviсe';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Tasks(_ref) {\n  _s();\n\n  let {\n    tasks\n  } = _ref;\n  const {\n    chosenList,\n    setLists\n  } = useContext(TodoContext);\n  const [currentTasks, setCurrentTasks] = useState([]);\n  const [newTask, setNewTask] = useState({\n    value: '',\n    listId: chosenList.id\n  });\n  useEffect(() => {\n    setCurrentTasks(tasks);\n  }, [tasks]);\n\n  const addTask = async newTask => {\n    if (newTask.value) {\n      await TaskServiсe.postTask(newTask);\n      const updatedList = await ListServiсe.getLists();\n      setLists(updatedList);\n    }\n\n    setNewTask({\n      value: '',\n      listId: null\n    });\n  };\n\n  const deleteTask = deletedTask => {\n    setCurrentTasks(currentTasks.filter(task => task.id !== deletedTask.id));\n    TaskServiсe.deleteTask(deletedTask);\n  };\n\n  const categoryTitle = () => {\n    return chosenList.id ? chosenList.title : 'All';\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tasks\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"tasks__title\",\n      children: categoryTitle()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: newTask.value,\n      onChange: e => setNewTask({\n        value: e.target.value,\n        id: \"\",\n        listId: chosenList.id\n      }),\n      className: \"tasks__input input\",\n      type: \"text\",\n      placeholder: `Create task on '${categoryTitle()}' category`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => addTask(newTask),\n      title: 'Create new task',\n      className: 'new-task-btn'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n      className: \"tasks__line\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 10\n    }, this), currentTasks.map(task => /*#__PURE__*/_jsxDEV(Task, {\n      task: task,\n      deleteTask: () => deleteTask(task)\n    }, task.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 7\n  }, this);\n}\n\n_s(Tasks, \"wNIrIomseiMH8NVCB2paE9VFfv8=\");\n\n_c = Tasks;\nexport default Tasks;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tasks\");","map":{"version":3,"names":["React","useState","useContext","useEffect","TodoContext","Button","Task","TaskServiсe","ListServiсe","Tasks","tasks","chosenList","setLists","currentTasks","setCurrentTasks","newTask","setNewTask","value","listId","id","addTask","postTask","updatedList","getLists","deleteTask","deletedTask","filter","task","categoryTitle","title","e","target","map"],"sources":["/Users/Vitaliy/Desktop/web/react/todoo/src/Components/Tasks/Tasks.jsx"],"sourcesContent":["import React, { useState, useContext, useEffect } from 'react'\nimport { TodoContext } from '../context'\nimport './Tasks.scss'\nimport Button from '../../UI/Button/Button'\nimport Task from '../Task/Task'\nimport { TaskServiсe, ListServiсe } from '../../API/Serviсe'\n\n\n\nfunction Tasks({ tasks }) {\n   const { chosenList, setLists } = useContext(TodoContext)\n   const [currentTasks, setCurrentTasks] = useState([])\n   const [newTask, setNewTask] = useState({ value: '', listId: chosenList.id, })\n\n   useEffect(() => {\n      setCurrentTasks(tasks)\n   }, [tasks])\n\n\n   const addTask = async (newTask) => {\n\n      if (newTask.value) {\n         await TaskServiсe.postTask(newTask)\n         const updatedList = await ListServiсe.getLists()\n         setLists(updatedList)\n      }\n      setNewTask({ value: '', listId: null })\n   }\n\n\n   const deleteTask = (deletedTask) => {\n      setCurrentTasks(currentTasks.filter(task => task.id !== deletedTask.id))\n      TaskServiсe.deleteTask(deletedTask)\n   }\n\n   const categoryTitle = () => {\n      return chosenList.id ? chosenList.title : 'All'\n   }\n\n   return (\n      <div className='tasks' >\n         <h1 className='tasks__title' >\n            {categoryTitle()}\n         </h1>\n\n         <input\n            value={newTask.value}\n            onChange={e => setNewTask({ value: e.target.value, id: \"\", listId: chosenList.id })}\n            className='tasks__input input'\n            type=\"text\"\n            placeholder={`Create task on '${categoryTitle()}' category`} />\n         <Button\n            onClick={() => addTask(newTask)}\n            title={'Create new task'}\n            className={'new-task-btn'}\n         />\n         <hr className='tasks__line' />\n\n         {currentTasks.map(task =>\n            <Task\n               key={task.id}\n               task={task}\n               deleteTask={() => deleteTask(task)}\n            />)}\n      </div>\n   )\n}\n\nexport default Tasks"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,EAAsCC,SAAtC,QAAuD,OAAvD;AACA,SAASC,WAAT,QAA4B,YAA5B;AACA,OAAO,cAAP;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,IAAP,MAAiB,cAAjB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,mBAAzC;;;AAIA,SAASC,KAAT,OAA0B;EAAA;;EAAA,IAAX;IAAEC;EAAF,CAAW;EACvB,MAAM;IAAEC,UAAF;IAAcC;EAAd,IAA2BV,UAAU,CAACE,WAAD,CAA3C;EACA,MAAM,CAACS,YAAD,EAAeC,eAAf,IAAkCb,QAAQ,CAAC,EAAD,CAAhD;EACA,MAAM,CAACc,OAAD,EAAUC,UAAV,IAAwBf,QAAQ,CAAC;IAAEgB,KAAK,EAAE,EAAT;IAAaC,MAAM,EAAEP,UAAU,CAACQ;EAAhC,CAAD,CAAtC;EAEAhB,SAAS,CAAC,MAAM;IACbW,eAAe,CAACJ,KAAD,CAAf;EACF,CAFQ,EAEN,CAACA,KAAD,CAFM,CAAT;;EAKA,MAAMU,OAAO,GAAG,MAAOL,OAAP,IAAmB;IAEhC,IAAIA,OAAO,CAACE,KAAZ,EAAmB;MAChB,MAAMV,WAAW,CAACc,QAAZ,CAAqBN,OAArB,CAAN;MACA,MAAMO,WAAW,GAAG,MAAMd,WAAW,CAACe,QAAZ,EAA1B;MACAX,QAAQ,CAACU,WAAD,CAAR;IACF;;IACDN,UAAU,CAAC;MAAEC,KAAK,EAAE,EAAT;MAAaC,MAAM,EAAE;IAArB,CAAD,CAAV;EACF,CARD;;EAWA,MAAMM,UAAU,GAAIC,WAAD,IAAiB;IACjCX,eAAe,CAACD,YAAY,CAACa,MAAb,CAAoBC,IAAI,IAAIA,IAAI,CAACR,EAAL,KAAYM,WAAW,CAACN,EAApD,CAAD,CAAf;IACAZ,WAAW,CAACiB,UAAZ,CAAuBC,WAAvB;EACF,CAHD;;EAKA,MAAMG,aAAa,GAAG,MAAM;IACzB,OAAOjB,UAAU,CAACQ,EAAX,GAAgBR,UAAU,CAACkB,KAA3B,GAAmC,KAA1C;EACF,CAFD;;EAIA,oBACG;IAAK,SAAS,EAAC,OAAf;IAAA,wBACG;MAAI,SAAS,EAAC,cAAd;MAAA,UACID,aAAa;IADjB;MAAA;MAAA;MAAA;IAAA,QADH,eAKG;MACG,KAAK,EAAEb,OAAO,CAACE,KADlB;MAEG,QAAQ,EAAEa,CAAC,IAAId,UAAU,CAAC;QAAEC,KAAK,EAAEa,CAAC,CAACC,MAAF,CAASd,KAAlB;QAAyBE,EAAE,EAAE,EAA7B;QAAiCD,MAAM,EAAEP,UAAU,CAACQ;MAApD,CAAD,CAF5B;MAGG,SAAS,EAAC,oBAHb;MAIG,IAAI,EAAC,MAJR;MAKG,WAAW,EAAG,mBAAkBS,aAAa,EAAG;IALnD;MAAA;MAAA;MAAA;IAAA,QALH,eAWG,QAAC,MAAD;MACG,OAAO,EAAE,MAAMR,OAAO,CAACL,OAAD,CADzB;MAEG,KAAK,EAAE,iBAFV;MAGG,SAAS,EAAE;IAHd;MAAA;MAAA;MAAA;IAAA,QAXH,eAgBG;MAAI,SAAS,EAAC;IAAd;MAAA;MAAA;MAAA;IAAA,QAhBH,EAkBIF,YAAY,CAACmB,GAAb,CAAiBL,IAAI,iBACnB,QAAC,IAAD;MAEG,IAAI,EAAEA,IAFT;MAGG,UAAU,EAAE,MAAMH,UAAU,CAACG,IAAD;IAH/B,GACQA,IAAI,CAACR,EADb;MAAA;MAAA;MAAA;IAAA,QADF,CAlBJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADH;AA2BF;;GAzDQV,K;;KAAAA,K;AA2DT,eAAeA,KAAf"},"metadata":{},"sourceType":"module"}