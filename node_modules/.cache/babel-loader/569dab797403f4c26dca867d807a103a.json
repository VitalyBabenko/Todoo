{"ast":null,"code":"var _jsxFileName = \"/Users/Vitaliy/Desktop/web/react/todoo/src/Components/Tasks/Tasks.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './Tasks.scss';\nimport Button from '../../UI/Button/Button';\nimport Task from '../Task/Task';\nimport PostService from '../../API/PostServise';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Tasks(_ref) {\n  _s();\n\n  let {\n    lists,\n    allTasks,\n    setAllTasks,\n    chosenList\n  } = _ref;\n  const [newTask, setNewTask] = useState();\n\n  const categoryTitle = () => {\n    if (chosenList.id) {\n      return chosenList.title;\n    } else {\n      return 'All';\n    }\n  };\n\n  console.log(chosenList);\n\n  const tasksOf = listId => {\n    let filtredList = lists.map(list => /*#__PURE__*/_jsxDEV(Task, {\n      value: task.value,\n      chosenList: chosenList\n    }, task.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 10\n    }, this));\n  };\n\n  const addTask = () => {\n    setAllTasks([...allTasks, {\n      listId: chosenList.id,\n      value: newTask\n    }]);\n    PostService.postTask({\n      listId: chosenList.id,\n      value: newTask\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tasks\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"tasks__title\",\n      children: categoryTitle()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: newTask,\n      onChange: e => setNewTask(e.target.value),\n      className: \"tasks__input input\",\n      type: \"text\",\n      placeholder: `Create task on '${categoryTitle()}' category`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: addTask,\n      title: 'Create new task',\n      className: 'new-task-btn'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n      className: \"tasks__line\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 10\n    }, this), lists.map(list => list.tasks.map(task => /*#__PURE__*/_jsxDEV(Task, {\n      value: task.value,\n      chosenList: chosenList\n    }, task.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 16\n    }, this)))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 7\n  }, this);\n}\n\n_s(Tasks, \"nZY3OqCfRyeaqguS9chwz7sG9P8=\");\n\n_c = Tasks;\nexport default Tasks;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tasks\");","map":{"version":3,"names":["React","useState","Button","Task","PostService","Tasks","lists","allTasks","setAllTasks","chosenList","newTask","setNewTask","categoryTitle","id","title","console","log","tasksOf","listId","filtredList","map","list","task","value","addTask","postTask","e","target","tasks"],"sources":["/Users/Vitaliy/Desktop/web/react/todoo/src/Components/Tasks/Tasks.jsx"],"sourcesContent":["import React, { useState } from 'react'\nimport './Tasks.scss'\nimport Button from '../../UI/Button/Button'\nimport Task from '../Task/Task'\nimport PostService from '../../API/PostServise'\n\n\n\nfunction Tasks({ lists, allTasks, setAllTasks, chosenList }) {\n   const [newTask, setNewTask] = useState()\n\n   const categoryTitle = () => {\n      if (chosenList.id) {\n         return chosenList.title\n      } else {\n         return 'All'\n      }\n   }\n   console.log(chosenList)\n\n   const tasksOf = (listId) => {\n      let filtredList = lists.map(list => \n        \n         <Task\n         key={task.id}\n         value={task.value}\n         chosenList={chosenList}\n      />\n         )\n   }\n\n\n\n   const addTask = () => {\n\n      setAllTasks([...allTasks, {\n         listId: chosenList.id,\n         value: newTask,\n      }])\n\n      PostService.postTask({\n         listId: chosenList.id,\n         value: newTask,\n      })\n   }\n\n   return (\n      <div className='tasks' >\n         <h1 className='tasks__title' >\n            {categoryTitle()}\n         </h1>\n\n         <input\n            value={newTask}\n            onChange={e => setNewTask(e.target.value)}\n            className='tasks__input input'\n            type=\"text\"\n            placeholder={`Create task on '${categoryTitle()}' category`} />\n         <Button\n            onClick={addTask}\n            title={'Create new task'}\n            className={'new-task-btn'}\n         />\n         <hr className='tasks__line' />\n         {\n            lists.map(list => list.tasks.map(task =>\n               <Task\n                  key={task.id}\n                  value={task.value}\n                  chosenList={chosenList}\n               />\n            ))}\n      </div>\n   )\n}\n\nexport default Tasks"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,cAAP;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,IAAP,MAAiB,cAAjB;AACA,OAAOC,WAAP,MAAwB,uBAAxB;;;AAIA,SAASC,KAAT,OAA6D;EAAA;;EAAA,IAA9C;IAAEC,KAAF;IAASC,QAAT;IAAmBC,WAAnB;IAAgCC;EAAhC,CAA8C;EAC1D,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,EAAtC;;EAEA,MAAMW,aAAa,GAAG,MAAM;IACzB,IAAIH,UAAU,CAACI,EAAf,EAAmB;MAChB,OAAOJ,UAAU,CAACK,KAAlB;IACF,CAFD,MAEO;MACJ,OAAO,KAAP;IACF;EACH,CAND;;EAOAC,OAAO,CAACC,GAAR,CAAYP,UAAZ;;EAEA,MAAMQ,OAAO,GAAIC,MAAD,IAAY;IACzB,IAAIC,WAAW,GAAGb,KAAK,CAACc,GAAN,CAAUC,IAAI,iBAE7B,QAAC,IAAD;MAEA,KAAK,EAAEC,IAAI,CAACC,KAFZ;MAGA,UAAU,EAAEd;IAHZ,GACKa,IAAI,CAACT,EADV;MAAA;MAAA;MAAA;IAAA,QAFe,CAAlB;EAQF,CATD;;EAaA,MAAMW,OAAO,GAAG,MAAM;IAEnBhB,WAAW,CAAC,CAAC,GAAGD,QAAJ,EAAc;MACvBW,MAAM,EAAET,UAAU,CAACI,EADI;MAEvBU,KAAK,EAAEb;IAFgB,CAAd,CAAD,CAAX;IAKAN,WAAW,CAACqB,QAAZ,CAAqB;MAClBP,MAAM,EAAET,UAAU,CAACI,EADD;MAElBU,KAAK,EAAEb;IAFW,CAArB;EAIF,CAXD;;EAaA,oBACG;IAAK,SAAS,EAAC,OAAf;IAAA,wBACG;MAAI,SAAS,EAAC,cAAd;MAAA,UACIE,aAAa;IADjB;MAAA;MAAA;MAAA;IAAA,QADH,eAKG;MACG,KAAK,EAAEF,OADV;MAEG,QAAQ,EAAEgB,CAAC,IAAIf,UAAU,CAACe,CAAC,CAACC,MAAF,CAASJ,KAAV,CAF5B;MAGG,SAAS,EAAC,oBAHb;MAIG,IAAI,EAAC,MAJR;MAKG,WAAW,EAAG,mBAAkBX,aAAa,EAAG;IALnD;MAAA;MAAA;MAAA;IAAA,QALH,eAWG,QAAC,MAAD;MACG,OAAO,EAAEY,OADZ;MAEG,KAAK,EAAE,iBAFV;MAGG,SAAS,EAAE;IAHd;MAAA;MAAA;MAAA;IAAA,QAXH,eAgBG;MAAI,SAAS,EAAC;IAAd;MAAA;MAAA;MAAA;IAAA,QAhBH,EAkBMlB,KAAK,CAACc,GAAN,CAAUC,IAAI,IAAIA,IAAI,CAACO,KAAL,CAAWR,GAAX,CAAeE,IAAI,iBAClC,QAAC,IAAD;MAEG,KAAK,EAAEA,IAAI,CAACC,KAFf;MAGG,UAAU,EAAEd;IAHf,GACQa,IAAI,CAACT,EADb;MAAA;MAAA;MAAA;IAAA,QADe,CAAlB,CAlBN;EAAA;IAAA;IAAA;IAAA;EAAA,QADH;AA4BF;;GAlEQR,K;;KAAAA,K;AAoET,eAAeA,KAAf"},"metadata":{},"sourceType":"module"}