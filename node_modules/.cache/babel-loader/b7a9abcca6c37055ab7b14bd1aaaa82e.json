{"ast":null,"code":"var _jsxFileName = \"/Users/Vitaliy/Desktop/web/react/todoo/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Categories from \"./Components/Categories/Categories\";\nimport PostService from \"./API/PostServise\";\nimport Tasks from \"./Components/Tasks/Tasks\";\nimport { TodoContext } from './Components/context';\nimport { Route, Routes, useHistory } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [lists, setLists] = useState([]);\n  const [chosenList, setChosenList] = useState(0);\n  const history = useHistory();\n  console.log(history);\n  useEffect(() => {\n    async function fetchData() {\n      const listResponse = await PostService.getLists();\n      setLists(listResponse.data);\n    }\n\n    fetchData();\n  }, [], [lists, chosenList]);\n\n  const getAllTaks = () => {\n    const allTasks = [];\n    lists.map(list => list.tasks.map(task => {\n      allTasks.push(task);\n    }));\n    return allTasks;\n  };\n\n  return /*#__PURE__*/_jsxDEV(TodoContext.Provider, {\n    value: {\n      lists,\n      setLists,\n      chosenList,\n      setChosenList\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app\",\n      children: [/*#__PURE__*/_jsxDEV(Categories, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(Tasks, {\n            tasks: getAllTaks()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 36\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), lists.map(list => /*#__PURE__*/_jsxDEV(Route, {\n          path: `lists/${list.id}`,\n          element: /*#__PURE__*/_jsxDEV(Tasks, {\n            tasks: list.tasks\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 17\n          }, this)\n        }, list.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"CHSbViABoOXyAIlHiz5bb5mZYjU=\", false, function () {\n  return [useHistory];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Categories","PostService","Tasks","TodoContext","Route","Routes","useHistory","App","lists","setLists","chosenList","setChosenList","history","console","log","fetchData","listResponse","getLists","data","getAllTaks","allTasks","map","list","tasks","task","push","id"],"sources":["/Users/Vitaliy/Desktop/web/react/todoo/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Categories from \"./Components/Categories/Categories\";\nimport PostService from \"./API/PostServise\";\nimport Tasks from \"./Components/Tasks/Tasks\";\nimport { TodoContext } from './Components/context'\nimport { Route, Routes, useHistory } from 'react-router-dom'\n\nfunction App() {\n  const [lists, setLists] = useState([])\n  const [chosenList, setChosenList] = useState(0)\n\n  const history = useHistory()\n  console.log(history)\n\n  useEffect(() => {\n    async function fetchData() {\n      const listResponse = await PostService.getLists()\n      setLists(listResponse.data)\n    }\n    fetchData()\n  }, [], [lists, chosenList])\n\n  const getAllTaks = () => {\n    const allTasks = []\n    lists.map(list => list.tasks.map(task => {\n      allTasks.push(task)\n    }))\n    return allTasks\n  }\n\n  return (\n    <TodoContext.Provider value={{\n      lists,\n      setLists,\n      chosenList,\n      setChosenList\n    }} >\n\n      <div className=\"app\">\n\n        <Categories />\n\n        <Routes>\n          <Route path='/' element={<Tasks tasks={getAllTaks()} />} />\n\n          {lists.map(list =>\n            <Route\n              key={list.id}\n              path={`lists/${list.id}`}\n              element={\n                <Tasks\n                  tasks={list.tasks}\n                />\n              }\n            />\n          )}\n\n        </Routes>\n\n      </div>\n    </TodoContext.Provider>\n  );\n}\n\nexport default App;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,UAAP,MAAuB,oCAAvB;AACA,OAAOC,WAAP,MAAwB,mBAAxB;AACA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,SAASC,WAAT,QAA4B,sBAA5B;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,UAAxB,QAA0C,kBAA1C;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EACb,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,EAAD,CAAlC;EACA,MAAM,CAACY,UAAD,EAAaC,aAAb,IAA8Bb,QAAQ,CAAC,CAAD,CAA5C;EAEA,MAAMc,OAAO,GAAGN,UAAU,EAA1B;EACAO,OAAO,CAACC,GAAR,CAAYF,OAAZ;EAEAb,SAAS,CAAC,MAAM;IACd,eAAegB,SAAf,GAA2B;MACzB,MAAMC,YAAY,GAAG,MAAMf,WAAW,CAACgB,QAAZ,EAA3B;MACAR,QAAQ,CAACO,YAAY,CAACE,IAAd,CAAR;IACD;;IACDH,SAAS;EACV,CANQ,EAMN,EANM,EAMF,CAACP,KAAD,EAAQE,UAAR,CANE,CAAT;;EAQA,MAAMS,UAAU,GAAG,MAAM;IACvB,MAAMC,QAAQ,GAAG,EAAjB;IACAZ,KAAK,CAACa,GAAN,CAAUC,IAAI,IAAIA,IAAI,CAACC,KAAL,CAAWF,GAAX,CAAeG,IAAI,IAAI;MACvCJ,QAAQ,CAACK,IAAT,CAAcD,IAAd;IACD,CAFiB,CAAlB;IAGA,OAAOJ,QAAP;EACD,CAND;;EAQA,oBACE,QAAC,WAAD,CAAa,QAAb;IAAsB,KAAK,EAAE;MAC3BZ,KAD2B;MAE3BC,QAF2B;MAG3BC,UAH2B;MAI3BC;IAJ2B,CAA7B;IAAA,uBAOE;MAAK,SAAS,EAAC,KAAf;MAAA,wBAEE,QAAC,UAAD;QAAA;QAAA;QAAA;MAAA,QAFF,eAIE,QAAC,MAAD;QAAA,wBACE,QAAC,KAAD;UAAO,IAAI,EAAC,GAAZ;UAAgB,OAAO,eAAE,QAAC,KAAD;YAAO,KAAK,EAAEQ,UAAU;UAAxB;YAAA;YAAA;YAAA;UAAA;QAAzB;UAAA;UAAA;UAAA;QAAA,QADF,EAGGX,KAAK,CAACa,GAAN,CAAUC,IAAI,iBACb,QAAC,KAAD;UAEE,IAAI,EAAG,SAAQA,IAAI,CAACI,EAAG,EAFzB;UAGE,OAAO,eACL,QAAC,KAAD;YACE,KAAK,EAAEJ,IAAI,CAACC;UADd;YAAA;YAAA;YAAA;UAAA;QAJJ,GACOD,IAAI,CAACI,EADZ;UAAA;UAAA;UAAA;QAAA,QADD,CAHH;MAAA;QAAA;QAAA;QAAA;MAAA,QAJF;IAAA;MAAA;MAAA;MAAA;IAAA;EAPF;IAAA;IAAA;IAAA;EAAA,QADF;AAgCD;;GAvDQnB,G;UAISD,U;;;KAJTC,G;AAyDT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}