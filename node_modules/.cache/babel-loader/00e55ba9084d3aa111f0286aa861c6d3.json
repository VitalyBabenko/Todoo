{"ast":null,"code":"var _jsxFileName = \"/Users/Vitaliy/Desktop/web/react/todoo/src/Components/Tasks/Tasks.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './Tasks.scss';\nimport Button from '../../UI/Button/Button';\nimport Task from '../Task/Task';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Tasks(_ref) {\n  _s();\n\n  let {\n    lists,\n    allTasks,\n    chosenList\n  } = _ref;\n  const [newTask, setNewTask] = useState();\n\n  const getTitle = () => {\n    lists.map(list => {\n      if (Number(list.id) === chosenList) {\n        re;\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tasks\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"tasks__title\",\n      children: chosenList === 0 ? 'All Tasks' : getTitle()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: newTask,\n      onChange: e => setNewTask(e.target.value),\n      className: \"tasks__input input\",\n      type: \"text\",\n      placeholder: \"Create task on 'All' category\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      title: 'Create new task',\n      className: 'new-task-btn'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n      className: \"tasks__line\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 10\n    }, this), allTasks.map(task => /*#__PURE__*/_jsxDEV(Task, {\n      value: task.value\n    }, task.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 7\n  }, this);\n}\n\n_s(Tasks, \"nZY3OqCfRyeaqguS9chwz7sG9P8=\");\n\n_c = Tasks;\nexport default Tasks;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tasks\");","map":{"version":3,"names":["React","useState","Button","Task","Tasks","lists","allTasks","chosenList","newTask","setNewTask","getTitle","map","list","Number","id","re","e","target","value","task"],"sources":["/Users/Vitaliy/Desktop/web/react/todoo/src/Components/Tasks/Tasks.jsx"],"sourcesContent":["import React, { useState } from 'react'\nimport './Tasks.scss'\nimport Button from '../../UI/Button/Button'\nimport Task from '../Task/Task'\n\n\n\nfunction Tasks({ lists, allTasks, chosenList }) {\n   const [newTask, setNewTask] = useState()\n\n   const getTitle = () => {\n      lists.map(list => {\n         if (Number(list.id) === chosenList) {\n            re\n         }\n      })\n\n   }\n\n   return (\n      <div className='tasks' >\n         <h1 className='tasks__title' >\n            {chosenList === 0 ? 'All Tasks' : getTitle()}\n         </h1>\n\n         <input\n            value={newTask}\n            onChange={e => setNewTask(e.target.value)}\n            className='tasks__input input'\n            type=\"text\"\n            placeholder=\"Create task on 'All' category\" />\n         <Button\n            title={'Create new task'}\n            className={'new-task-btn'}\n         />\n         <hr className='tasks__line' />\n         {allTasks.map(task =>\n            <Task\n               key={task.id}\n               value={task.value}\n            />\n         )}\n      </div>\n   )\n}\n\nexport default Tasks"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,cAAP;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,IAAP,MAAiB,cAAjB;;;AAIA,SAASC,KAAT,OAAgD;EAAA;;EAAA,IAAjC;IAAEC,KAAF;IAASC,QAAT;IAAmBC;EAAnB,CAAiC;EAC7C,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,EAAtC;;EAEA,MAAMS,QAAQ,GAAG,MAAM;IACpBL,KAAK,CAACM,GAAN,CAAUC,IAAI,IAAI;MACf,IAAIC,MAAM,CAACD,IAAI,CAACE,EAAN,CAAN,KAAoBP,UAAxB,EAAoC;QACjCQ,EAAE;MACJ;IACH,CAJD;EAMF,CAPD;;EASA,oBACG;IAAK,SAAS,EAAC,OAAf;IAAA,wBACG;MAAI,SAAS,EAAC,cAAd;MAAA,UACIR,UAAU,KAAK,CAAf,GAAmB,WAAnB,GAAiCG,QAAQ;IAD7C;MAAA;MAAA;MAAA;IAAA,QADH,eAKG;MACG,KAAK,EAAEF,OADV;MAEG,QAAQ,EAAEQ,CAAC,IAAIP,UAAU,CAACO,CAAC,CAACC,MAAF,CAASC,KAAV,CAF5B;MAGG,SAAS,EAAC,oBAHb;MAIG,IAAI,EAAC,MAJR;MAKG,WAAW,EAAC;IALf;MAAA;MAAA;MAAA;IAAA,QALH,eAWG,QAAC,MAAD;MACG,KAAK,EAAE,iBADV;MAEG,SAAS,EAAE;IAFd;MAAA;MAAA;MAAA;IAAA,QAXH,eAeG;MAAI,SAAS,EAAC;IAAd;MAAA;MAAA;MAAA;IAAA,QAfH,EAgBIZ,QAAQ,CAACK,GAAT,CAAaQ,IAAI,iBACf,QAAC,IAAD;MAEG,KAAK,EAAEA,IAAI,CAACD;IAFf,GACQC,IAAI,CAACL,EADb;MAAA;MAAA;MAAA;IAAA,QADF,CAhBJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADH;AAyBF;;GArCQV,K;;KAAAA,K;AAuCT,eAAeA,KAAf"},"metadata":{},"sourceType":"module"}