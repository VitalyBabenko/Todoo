{"ast":null,"code":"var _jsxFileName = \"/Users/Vitaliy/Desktop/web/react/todoo/src/Components/Tasks/Tasks.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext, useEffect } from 'react';\nimport { TodoContext } from '../context';\nimport './Tasks.scss';\nimport Button from '../../UI/Button/Button';\nimport Task from '../Task/Task';\nimport { TaskServiсe, ListServiсe } from '../../API/Serviсe';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Tasks(_ref) {\n  _s();\n\n  let {\n    tasks\n  } = _ref;\n  const {\n    chosenList,\n    setLists,\n    currentPage\n  } = useContext(TodoContext);\n  const [newTask, setNewTask] = useState({\n    value: '',\n    listId: +currentPage\n  });\n  useEffect(() => {\n    setCurrentTasks(tasks);\n  }, [tasks]);\n\n  const addTask = async newTask => {\n    if (newTask.value) {\n      await TaskServiсe.postTask(newTask);\n      const updatedList = await ListServiсe.getLists();\n      setLists(updatedList);\n    }\n\n    console.log(newTask);\n    setNewTask({\n      value: '',\n      listId: null\n    });\n  };\n\n  const deleteTask = deletedTask => {\n    setCurrentTasks(currentTasks.filter(task => task.id !== deletedTask.id));\n    TaskServiсe.deleteTask(deletedTask);\n  };\n\n  const categoryTitle = () => {\n    return +currentPage ? chosenList.title : 'All';\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tasks\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"tasks__title\",\n      children: categoryTitle()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: newTask.value,\n      onChange: e => setNewTask({\n        value: e.target.value,\n        listId: +currentPage\n      }),\n      className: \"tasks__input input\",\n      type: \"text\",\n      placeholder: `Create task on '${categoryTitle()}' category`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => addTask(newTask),\n      title: 'Create new task',\n      className: 'new-task-btn'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n      className: \"tasks__line\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 10\n    }, this), currentTasks.map(task => /*#__PURE__*/_jsxDEV(Task, {\n      task: task,\n      deleteTask: () => deleteTask(task)\n    }, task.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 7\n  }, this);\n}\n\n_s(Tasks, \"ksU80k2VuvM2PEZSiGkmQ9rF2/Q=\");\n\n_c = Tasks;\nexport default Tasks;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tasks\");","map":{"version":3,"names":["React","useState","useContext","useEffect","TodoContext","Button","Task","TaskServiсe","ListServiсe","Tasks","tasks","chosenList","setLists","currentPage","newTask","setNewTask","value","listId","setCurrentTasks","addTask","postTask","updatedList","getLists","console","log","deleteTask","deletedTask","currentTasks","filter","task","id","categoryTitle","title","e","target","map"],"sources":["/Users/Vitaliy/Desktop/web/react/todoo/src/Components/Tasks/Tasks.jsx"],"sourcesContent":["import React, { useState, useContext, useEffect } from 'react'\nimport { TodoContext } from '../context'\nimport './Tasks.scss'\nimport Button from '../../UI/Button/Button'\nimport Task from '../Task/Task'\nimport { TaskServiсe, ListServiсe } from '../../API/Serviсe'\n\n\n\nfunction Tasks({ tasks }) {\n   const { chosenList, setLists, currentPage } = useContext(TodoContext)\n   \n   const [newTask, setNewTask] = useState({ value: '', listId: +currentPage })\n\n   useEffect(() => {\n      setCurrentTasks(tasks)\n   }, [tasks])\n\n   const addTask = async (newTask) => {\n      if (newTask.value) {\n         await TaskServiсe.postTask(newTask)\n         const updatedList = await ListServiсe.getLists()\n         setLists(updatedList)\n      }\n      console.log(newTask)\n      setNewTask({ value: '', listId: null })\n   }\n\n\n   const deleteTask = (deletedTask) => {\n      setCurrentTasks(currentTasks.filter(task => task.id !== deletedTask.id))\n      TaskServiсe.deleteTask(deletedTask)\n   }\n\n   const categoryTitle = () => {\n      return +currentPage ? chosenList.title : 'All'\n   }\n\n   return (\n      <div className='tasks' >\n         <h1 className='tasks__title' >\n            {categoryTitle()}\n         </h1>\n\n         <input\n            value={newTask.value}\n            onChange={e => setNewTask({ value: e.target.value, listId: +currentPage })}\n            className='tasks__input input'\n            type=\"text\"\n            placeholder={`Create task on '${categoryTitle()}' category`} />\n         <Button\n            onClick={() => addTask(newTask)}\n            title={'Create new task'}\n            className={'new-task-btn'}\n         />\n         <hr className='tasks__line' />\n\n         {currentTasks.map(task =>\n            <Task\n               key={task.id}\n               task={task}\n               deleteTask={() => deleteTask(task)}\n            />)}\n      </div>\n   )\n}\n\nexport default Tasks"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,EAAsCC,SAAtC,QAAuD,OAAvD;AACA,SAASC,WAAT,QAA4B,YAA5B;AACA,OAAO,cAAP;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,IAAP,MAAiB,cAAjB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,mBAAzC;;;AAIA,SAASC,KAAT,OAA0B;EAAA;;EAAA,IAAX;IAAEC;EAAF,CAAW;EACvB,MAAM;IAAEC,UAAF;IAAcC,QAAd;IAAwBC;EAAxB,IAAwCX,UAAU,CAACE,WAAD,CAAxD;EAEA,MAAM,CAACU,OAAD,EAAUC,UAAV,IAAwBd,QAAQ,CAAC;IAAEe,KAAK,EAAE,EAAT;IAAaC,MAAM,EAAE,CAACJ;EAAtB,CAAD,CAAtC;EAEAV,SAAS,CAAC,MAAM;IACbe,eAAe,CAACR,KAAD,CAAf;EACF,CAFQ,EAEN,CAACA,KAAD,CAFM,CAAT;;EAIA,MAAMS,OAAO,GAAG,MAAOL,OAAP,IAAmB;IAChC,IAAIA,OAAO,CAACE,KAAZ,EAAmB;MAChB,MAAMT,WAAW,CAACa,QAAZ,CAAqBN,OAArB,CAAN;MACA,MAAMO,WAAW,GAAG,MAAMb,WAAW,CAACc,QAAZ,EAA1B;MACAV,QAAQ,CAACS,WAAD,CAAR;IACF;;IACDE,OAAO,CAACC,GAAR,CAAYV,OAAZ;IACAC,UAAU,CAAC;MAAEC,KAAK,EAAE,EAAT;MAAaC,MAAM,EAAE;IAArB,CAAD,CAAV;EACF,CARD;;EAWA,MAAMQ,UAAU,GAAIC,WAAD,IAAiB;IACjCR,eAAe,CAACS,YAAY,CAACC,MAAb,CAAoBC,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYJ,WAAW,CAACI,EAApD,CAAD,CAAf;IACAvB,WAAW,CAACkB,UAAZ,CAAuBC,WAAvB;EACF,CAHD;;EAKA,MAAMK,aAAa,GAAG,MAAM;IACzB,OAAO,CAAClB,WAAD,GAAeF,UAAU,CAACqB,KAA1B,GAAkC,KAAzC;EACF,CAFD;;EAIA,oBACG;IAAK,SAAS,EAAC,OAAf;IAAA,wBACG;MAAI,SAAS,EAAC,cAAd;MAAA,UACID,aAAa;IADjB;MAAA;MAAA;MAAA;IAAA,QADH,eAKG;MACG,KAAK,EAAEjB,OAAO,CAACE,KADlB;MAEG,QAAQ,EAAEiB,CAAC,IAAIlB,UAAU,CAAC;QAAEC,KAAK,EAAEiB,CAAC,CAACC,MAAF,CAASlB,KAAlB;QAAyBC,MAAM,EAAE,CAACJ;MAAlC,CAAD,CAF5B;MAGG,SAAS,EAAC,oBAHb;MAIG,IAAI,EAAC,MAJR;MAKG,WAAW,EAAG,mBAAkBkB,aAAa,EAAG;IALnD;MAAA;MAAA;MAAA;IAAA,QALH,eAWG,QAAC,MAAD;MACG,OAAO,EAAE,MAAMZ,OAAO,CAACL,OAAD,CADzB;MAEG,KAAK,EAAE,iBAFV;MAGG,SAAS,EAAE;IAHd;MAAA;MAAA;MAAA;IAAA,QAXH,eAgBG;MAAI,SAAS,EAAC;IAAd;MAAA;MAAA;MAAA;IAAA,QAhBH,EAkBIa,YAAY,CAACQ,GAAb,CAAiBN,IAAI,iBACnB,QAAC,IAAD;MAEG,IAAI,EAAEA,IAFT;MAGG,UAAU,EAAE,MAAMJ,UAAU,CAACI,IAAD;IAH/B,GACQA,IAAI,CAACC,EADb;MAAA;MAAA;MAAA;IAAA,QADF,CAlBJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADH;AA2BF;;GAxDQrB,K;;KAAAA,K;AA0DT,eAAeA,KAAf"},"metadata":{},"sourceType":"module"}