{"ast":null,"code":"var _jsxFileName = \"/Users/Vitaliy/Desktop/web/react/todoo/src/Components/Categories/Categories.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from 'react';\nimport './Categories.scss';\nimport { TodoContext } from '../context';\nimport { ListServiсe, TaskServiсe } from '../../API/Serviсe';\nimport List from '../List/List';\nimport Button from '../../UI/Button/Button';\nimport { Link, useLocation } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Categories() {\n  _s();\n\n  const {\n    lists,\n    setLists,\n    chosenList,\n    setChosenList\n  } = useContext(TodoContext);\n  const [newList, setNewList] = useState('');\n  const page = useLocation();\n  console.log(currentPage.pathname);\n\n  const addList = async () => {\n    if (newList.length) {\n      await ListServiсe.postList({\n        title: newList,\n        id: '',\n        tasks: []\n      });\n      const updatedList = await ListServiсe.getLists();\n      setLists(updatedList);\n    }\n\n    setNewList('');\n  };\n\n  const deleteList = async deletedList => {\n    setLists(lists.filter(list => list.id !== deletedList.id));\n    deletedList.tasks.map(task => new Promise(reslove => reslove(TaskServiсe.deleteTask(task))));\n    await ListServiсe.deleteList(deletedList);\n    setChosenList(0);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"categories\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: \"/img/logo.svg\",\n      alt: \"logo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"categories__list\",\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        style: {\n          textDecoration: 'none'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"li\", {\n          className: chosenList.id ? 'categories__item' : 'categories__item chosen',\n          onClick: () => setChosenList(0),\n          children: \"All\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), lists.map(list => /*#__PURE__*/_jsxDEV(List, {\n        list: list,\n        deleteList: deleteList,\n        chosenList: chosenList,\n        setChosenList: setChosenList\n      }, list.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: newList,\n      onChange: e => e.target.value.length < 16 ? setNewList(e.target.value) : alert('max categories length = 16'),\n      className: \"categories__input input\",\n      type: \"text\",\n      placeholder: \"New category\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: addList,\n      title: 'Add',\n      className: 'categories__button'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Categories, \"js2snqQrj60VAKbBDtY78k8PXZA=\", false, function () {\n  return [useLocation];\n});\n\n_c = Categories;\nexport default Categories;\n\nvar _c;\n\n$RefreshReg$(_c, \"Categories\");","map":{"version":3,"names":["React","useState","useContext","TodoContext","ListServiсe","TaskServiсe","List","Button","Link","useLocation","Categories","lists","setLists","chosenList","setChosenList","newList","setNewList","page","console","log","currentPage","pathname","addList","length","postList","title","id","tasks","updatedList","getLists","deleteList","deletedList","filter","list","map","task","Promise","reslove","deleteTask","textDecoration","e","target","value","alert"],"sources":["/Users/Vitaliy/Desktop/web/react/todoo/src/Components/Categories/Categories.jsx"],"sourcesContent":["import React, { useState, useContext } from 'react'\nimport './Categories.scss'\nimport { TodoContext } from '../context'\nimport { ListServiсe, TaskServiсe } from '../../API/Serviсe'\nimport List from '../List/List'\nimport Button from '../../UI/Button/Button'\nimport { Link, useLocation } from 'react-router-dom'\n\nfunction Categories() {\n  const { lists, setLists, chosenList, setChosenList } = useContext(TodoContext)\n  const [newList, setNewList] = useState('')\n\n  const page = useLocation()\n  console.log(currentPage.pathname)\n\n  const addList = async () => {\n    if (newList.length) {\n      await ListServiсe.postList({ title: newList, id: '', tasks: [] })\n      const updatedList = await ListServiсe.getLists()\n      setLists(updatedList)\n    }\n    setNewList('')\n  }\n\n  const deleteList = async (deletedList) => {\n    setLists(lists.filter(list => list.id !== deletedList.id))\n    deletedList.tasks.map(task =>\n      new Promise(reslove =>\n        reslove(TaskServiсe.deleteTask(task))\n      )\n    )\n    await ListServiсe.deleteList(deletedList)\n    setChosenList(0)\n  }\n\n  return (\n    <div className='categories' >\n      <img src='/img/logo.svg' alt='logo' />\n      <ul className='categories__list'>\n        <Link to='/' style={{ textDecoration: 'none' }} >\n          <li\n            className={chosenList.id ? 'categories__item' : 'categories__item chosen'}\n            onClick={() => setChosenList(0)}>\n            All\n          </li>\n        </Link>\n\n        {lists.map(list =>\n          <List\n            key={list.id}\n            list={list}\n            deleteList={deleteList}\n            chosenList={chosenList}\n            setChosenList={setChosenList}\n          />\n        )}\n      </ul>\n      <input\n        value={newList}\n        onChange={e => e.target.value.length < 16 ? setNewList(e.target.value) : alert('max categories length = 16')}\n        className='categories__input input'\n        type=\"text\"\n        placeholder='New category' />\n      <Button\n        onClick={addList}\n        title={'Add'}\n        className={'categories__button'}\n      />\n    </div>\n  )\n}\n\nexport default Categories"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AACA,OAAO,mBAAP;AACA,SAASC,WAAT,QAA4B,YAA5B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,mBAAzC;AACA,OAAOC,IAAP,MAAiB,cAAjB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,SAASC,IAAT,EAAeC,WAAf,QAAkC,kBAAlC;;;AAEA,SAASC,UAAT,GAAsB;EAAA;;EACpB,MAAM;IAAEC,KAAF;IAASC,QAAT;IAAmBC,UAAnB;IAA+BC;EAA/B,IAAiDZ,UAAU,CAACC,WAAD,CAAjE;EACA,MAAM,CAACY,OAAD,EAAUC,UAAV,IAAwBf,QAAQ,CAAC,EAAD,CAAtC;EAEA,MAAMgB,IAAI,GAAGR,WAAW,EAAxB;EACAS,OAAO,CAACC,GAAR,CAAYC,WAAW,CAACC,QAAxB;;EAEA,MAAMC,OAAO,GAAG,YAAY;IAC1B,IAAIP,OAAO,CAACQ,MAAZ,EAAoB;MAClB,MAAMnB,WAAW,CAACoB,QAAZ,CAAqB;QAAEC,KAAK,EAAEV,OAAT;QAAkBW,EAAE,EAAE,EAAtB;QAA0BC,KAAK,EAAE;MAAjC,CAArB,CAAN;MACA,MAAMC,WAAW,GAAG,MAAMxB,WAAW,CAACyB,QAAZ,EAA1B;MACAjB,QAAQ,CAACgB,WAAD,CAAR;IACD;;IACDZ,UAAU,CAAC,EAAD,CAAV;EACD,CAPD;;EASA,MAAMc,UAAU,GAAG,MAAOC,WAAP,IAAuB;IACxCnB,QAAQ,CAACD,KAAK,CAACqB,MAAN,CAAaC,IAAI,IAAIA,IAAI,CAACP,EAAL,KAAYK,WAAW,CAACL,EAA7C,CAAD,CAAR;IACAK,WAAW,CAACJ,KAAZ,CAAkBO,GAAlB,CAAsBC,IAAI,IACxB,IAAIC,OAAJ,CAAYC,OAAO,IACjBA,OAAO,CAAChC,WAAW,CAACiC,UAAZ,CAAuBH,IAAvB,CAAD,CADT,CADF;IAKA,MAAM/B,WAAW,CAAC0B,UAAZ,CAAuBC,WAAvB,CAAN;IACAjB,aAAa,CAAC,CAAD,CAAb;EACD,CATD;;EAWA,oBACE;IAAK,SAAS,EAAC,YAAf;IAAA,wBACE;MAAK,GAAG,EAAC,eAAT;MAAyB,GAAG,EAAC;IAA7B;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAI,SAAS,EAAC,kBAAd;MAAA,wBACE,QAAC,IAAD;QAAM,EAAE,EAAC,GAAT;QAAa,KAAK,EAAE;UAAEyB,cAAc,EAAE;QAAlB,CAApB;QAAA,uBACE;UACE,SAAS,EAAE1B,UAAU,CAACa,EAAX,GAAgB,kBAAhB,GAAqC,yBADlD;UAEE,OAAO,EAAE,MAAMZ,aAAa,CAAC,CAAD,CAF9B;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QADF,EASGH,KAAK,CAACuB,GAAN,CAAUD,IAAI,iBACb,QAAC,IAAD;QAEE,IAAI,EAAEA,IAFR;QAGE,UAAU,EAAEH,UAHd;QAIE,UAAU,EAAEjB,UAJd;QAKE,aAAa,EAAEC;MALjB,GACOmB,IAAI,CAACP,EADZ;QAAA;QAAA;QAAA;MAAA,QADD,CATH;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF,eAqBE;MACE,KAAK,EAAEX,OADT;MAEE,QAAQ,EAAEyB,CAAC,IAAIA,CAAC,CAACC,MAAF,CAASC,KAAT,CAAenB,MAAf,GAAwB,EAAxB,GAA6BP,UAAU,CAACwB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAvC,GAA0DC,KAAK,CAAC,4BAAD,CAFhF;MAGE,SAAS,EAAC,yBAHZ;MAIE,IAAI,EAAC,MAJP;MAKE,WAAW,EAAC;IALd;MAAA;MAAA;MAAA;IAAA,QArBF,eA2BE,QAAC,MAAD;MACE,OAAO,EAAErB,OADX;MAEE,KAAK,EAAE,KAFT;MAGE,SAAS,EAAE;IAHb;MAAA;MAAA;MAAA;IAAA,QA3BF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAmCD;;GA9DQZ,U;UAIMD,W;;;KAJNC,U;AAgET,eAAeA,UAAf"},"metadata":{},"sourceType":"module"}