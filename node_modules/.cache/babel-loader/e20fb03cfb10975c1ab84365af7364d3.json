{"ast":null,"code":"var _jsxFileName = \"/Users/Vitaliy/Desktop/web/react/todoo/src/Components/Tasks/Tasks.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from 'react';\nimport { TodoContext } from '../context';\nimport './Tasks.scss';\nimport Button from '../../UI/Button/Button';\nimport Task from '../Task/Task';\nimport PostService from '../../API/PostServise';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Tasks(_ref) {\n  _s();\n\n  let {\n    tasks\n  } = _ref;\n  const {\n    lists,\n    setLists,\n    chosenList\n  } = useContext(TodoContext);\n  const [newTask, setNewTask] = useState({\n    value: '',\n    listId: chosenList.id\n  });\n\n  const addTask = newTask => {\n    if (newTask.value) {\n      const newList = lists.map(item => {\n        if (+item.id === +newTask.listId) {\n          item.tasks = [...item.tasks, newTask];\n        }\n\n        return item;\n      });\n      setLists(newList);\n    }\n\n    PostService.postTask(newTask);\n    setNewTask({\n      value: '',\n      listId: null\n    });\n  };\n\n  const deleteTask = deletedTask => {\n    // if (chosenList) {\n    //    const newChosenList = chosenList.tasks.filter(task => +task.id !== +deletedTask.id)\n    //    setChosenList({ ...chosenList, tasks: newChosenList })\n    // } else {\n    //    const newList = lists.map(item => {\n    //       if (+item.id === +deletedTask.listId) {\n    //          item.tasks = item.tasks.filter(task => +task.id !== +deletedTask.id)\n    //       }\n    //       return item\n    //    })\n    //    // const filtredTasks = tasks.filter(task => task.id !== deletedTask.id)\n    //    // setLists(newList)\n    // }\n    PostService.deleteTask(deletedTask);\n  };\n\n  const categoryTitle = () => {\n    return chosenList.id ? chosenList.title : 'All';\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tasks\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"tasks__title\",\n      children: categoryTitle()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: newTask.value,\n      onChange: e => setNewTask({\n        value: e.target.value,\n        id: Date.now(),\n        listId: chosenList.id\n      }),\n      className: \"tasks__input input\",\n      type: \"text\",\n      placeholder: `Create task on '${categoryTitle()}' category`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => addTask(newTask),\n      title: 'Create new task',\n      className: 'new-task-btn'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n      className: \"tasks__line\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 10\n    }, this), tasks.map(task => /*#__PURE__*/_jsxDEV(Task, {\n      task: task,\n      deleteTask: deleteTask\n    }, task.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 7\n  }, this);\n}\n\n_s(Tasks, \"Z8FUE2Hu0o2PI1sEJhdTlLllSUU=\");\n\n_c = Tasks;\nexport default Tasks;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tasks\");","map":{"version":3,"names":["React","useState","useContext","TodoContext","Button","Task","PostService","Tasks","tasks","lists","setLists","chosenList","newTask","setNewTask","value","listId","id","addTask","newList","map","item","postTask","deleteTask","deletedTask","categoryTitle","title","e","target","Date","now","task"],"sources":["/Users/Vitaliy/Desktop/web/react/todoo/src/Components/Tasks/Tasks.jsx"],"sourcesContent":["import React, { useState, useContext } from 'react'\nimport { TodoContext } from '../context'\nimport './Tasks.scss'\nimport Button from '../../UI/Button/Button'\nimport Task from '../Task/Task'\nimport PostService from '../../API/PostServise'\n\n\n\nfunction Tasks({ tasks }) {\n   const { lists, setLists, chosenList } = useContext(TodoContext)\n\n   const [newTask, setNewTask] = useState({ value: '', listId: chosenList.id, })\n\n   const addTask = (newTask) => {\n      if (newTask.value) {\n         const newList = lists.map(item => {\n            if (+item.id === +newTask.listId) {\n               item.tasks = [...item.tasks, newTask]\n            }\n            return item\n         })\n         setLists(newList)\n      }\n\n      PostService.postTask(newTask)\n      setNewTask({ value: '', listId: null })\n   }\n\n   const deleteTask = (deletedTask) => {\n      // if (chosenList) {\n      //    const newChosenList = chosenList.tasks.filter(task => +task.id !== +deletedTask.id)\n      //    setChosenList({ ...chosenList, tasks: newChosenList })\n      // } else {\n      //    const newList = lists.map(item => {\n      //       if (+item.id === +deletedTask.listId) {\n      //          item.tasks = item.tasks.filter(task => +task.id !== +deletedTask.id)\n      //       }\n      //       return item\n      //    })\n      //    // const filtredTasks = tasks.filter(task => task.id !== deletedTask.id)\n\n\n      //    // setLists(newList)\n      // }\n      PostService.deleteTask(deletedTask)\n\n   }\n\n   const categoryTitle = () => {\n      return chosenList.id ? chosenList.title : 'All'\n   }\n\n   return (\n      <div className='tasks' >\n         <h1 className='tasks__title' >\n            {categoryTitle()}\n         </h1>\n\n         <input\n            value={newTask.value}\n            onChange={e => setNewTask({ value: e.target.value, id: Date.now(), listId: chosenList.id })}\n            className='tasks__input input'\n            type=\"text\"\n            placeholder={`Create task on '${categoryTitle()}' category`} />\n         <Button\n            onClick={() => addTask(newTask)}\n            title={'Create new task'}\n            className={'new-task-btn'}\n         />\n         <hr className='tasks__line' />\n\n         {tasks.map(task =>\n            <Task\n               key={task.id}\n               task={task}\n               deleteTask={deleteTask}\n            />)}\n      </div>\n   )\n}\n\nexport default Tasks"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AACA,SAASC,WAAT,QAA4B,YAA5B;AACA,OAAO,cAAP;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,IAAP,MAAiB,cAAjB;AACA,OAAOC,WAAP,MAAwB,uBAAxB;;;AAIA,SAASC,KAAT,OAA0B;EAAA;;EAAA,IAAX;IAAEC;EAAF,CAAW;EACvB,MAAM;IAAEC,KAAF;IAASC,QAAT;IAAmBC;EAAnB,IAAkCT,UAAU,CAACC,WAAD,CAAlD;EAEA,MAAM,CAACS,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAC;IAAEa,KAAK,EAAE,EAAT;IAAaC,MAAM,EAAEJ,UAAU,CAACK;EAAhC,CAAD,CAAtC;;EAEA,MAAMC,OAAO,GAAIL,OAAD,IAAa;IAC1B,IAAIA,OAAO,CAACE,KAAZ,EAAmB;MAChB,MAAMI,OAAO,GAAGT,KAAK,CAACU,GAAN,CAAUC,IAAI,IAAI;QAC/B,IAAI,CAACA,IAAI,CAACJ,EAAN,KAAa,CAACJ,OAAO,CAACG,MAA1B,EAAkC;UAC/BK,IAAI,CAACZ,KAAL,GAAa,CAAC,GAAGY,IAAI,CAACZ,KAAT,EAAgBI,OAAhB,CAAb;QACF;;QACD,OAAOQ,IAAP;MACF,CALe,CAAhB;MAMAV,QAAQ,CAACQ,OAAD,CAAR;IACF;;IAEDZ,WAAW,CAACe,QAAZ,CAAqBT,OAArB;IACAC,UAAU,CAAC;MAAEC,KAAK,EAAE,EAAT;MAAaC,MAAM,EAAE;IAArB,CAAD,CAAV;EACF,CAbD;;EAeA,MAAMO,UAAU,GAAIC,WAAD,IAAiB;IACjC;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAGA;IACA;IACAjB,WAAW,CAACgB,UAAZ,CAAuBC,WAAvB;EAEF,CAlBD;;EAoBA,MAAMC,aAAa,GAAG,MAAM;IACzB,OAAOb,UAAU,CAACK,EAAX,GAAgBL,UAAU,CAACc,KAA3B,GAAmC,KAA1C;EACF,CAFD;;EAIA,oBACG;IAAK,SAAS,EAAC,OAAf;IAAA,wBACG;MAAI,SAAS,EAAC,cAAd;MAAA,UACID,aAAa;IADjB;MAAA;MAAA;MAAA;IAAA,QADH,eAKG;MACG,KAAK,EAAEZ,OAAO,CAACE,KADlB;MAEG,QAAQ,EAAEY,CAAC,IAAIb,UAAU,CAAC;QAAEC,KAAK,EAAEY,CAAC,CAACC,MAAF,CAASb,KAAlB;QAAyBE,EAAE,EAAEY,IAAI,CAACC,GAAL,EAA7B;QAAyCd,MAAM,EAAEJ,UAAU,CAACK;MAA5D,CAAD,CAF5B;MAGG,SAAS,EAAC,oBAHb;MAIG,IAAI,EAAC,MAJR;MAKG,WAAW,EAAG,mBAAkBQ,aAAa,EAAG;IALnD;MAAA;MAAA;MAAA;IAAA,QALH,eAWG,QAAC,MAAD;MACG,OAAO,EAAE,MAAMP,OAAO,CAACL,OAAD,CADzB;MAEG,KAAK,EAAE,iBAFV;MAGG,SAAS,EAAE;IAHd;MAAA;MAAA;MAAA;IAAA,QAXH,eAgBG;MAAI,SAAS,EAAC;IAAd;MAAA;MAAA;MAAA;IAAA,QAhBH,EAkBIJ,KAAK,CAACW,GAAN,CAAUW,IAAI,iBACZ,QAAC,IAAD;MAEG,IAAI,EAAEA,IAFT;MAGG,UAAU,EAAER;IAHf,GACQQ,IAAI,CAACd,EADb;MAAA;MAAA;MAAA;IAAA,QADF,CAlBJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADH;AA2BF;;GAvEQT,K;;KAAAA,K;AAyET,eAAeA,KAAf"},"metadata":{},"sourceType":"module"}