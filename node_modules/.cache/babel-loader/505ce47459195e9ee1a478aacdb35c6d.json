{"ast":null,"code":"var _jsxFileName = \"/Users/Vitaliy/Desktop/web/react/todoo/src/Components/Tasks/Tasks.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './Tasks.scss';\nimport Button from '../../UI/Button/Button';\nimport Task from '../Task/Task';\nimport PostService from '../../API/PostServise';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Tasks(_ref) {\n  _s();\n\n  let {\n    lists,\n    allTasks,\n    chosenList\n  } = _ref;\n  const [newTask, setNewTask] = useState();\n\n  const categoryTitle = () => {\n    if (chosenList.id) {\n      return chosenList.title;\n    } else {\n      return 'All';\n    }\n  };\n\n  const addTask = () => {\n    PostService.postTask('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tasks\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"tasks__title\",\n      children: categoryTitle()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: newTask,\n      onChange: e => setNewTask(e.target.value),\n      className: \"tasks__input input\",\n      type: \"text\",\n      placeholder: `Create task on '${categoryTitle()}' category`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: addTask,\n      title: 'Create new task',\n      className: 'new-task-btn'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n      className: \"tasks__line\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 10\n    }, this), allTasks.map(task => /*#__PURE__*/_jsxDEV(Task, {\n      value: task.value,\n      chosenList: chosenList\n    }, task.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 7\n  }, this);\n}\n\n_s(Tasks, \"nZY3OqCfRyeaqguS9chwz7sG9P8=\");\n\n_c = Tasks;\nexport default Tasks;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tasks\");","map":{"version":3,"names":["React","useState","Button","Task","PostService","Tasks","lists","allTasks","chosenList","newTask","setNewTask","categoryTitle","id","title","addTask","postTask","e","target","value","map","task"],"sources":["/Users/Vitaliy/Desktop/web/react/todoo/src/Components/Tasks/Tasks.jsx"],"sourcesContent":["import React, { useState } from 'react'\nimport './Tasks.scss'\nimport Button from '../../UI/Button/Button'\nimport Task from '../Task/Task'\nimport PostService from '../../API/PostServise'\n\n\n\nfunction Tasks({ lists, allTasks, chosenList }) {\n   const [newTask, setNewTask] = useState()\n\n   const categoryTitle = () => {\n      if (chosenList.id) {\n         return chosenList.title\n      } else {\n         return 'All'\n      }\n   }\n\n   const addTask = () => {\n      PostService.postTask('')\n   }\n\n   return (\n      <div className='tasks' >\n         <h1 className='tasks__title' >\n            {categoryTitle()}\n         </h1>\n\n         <input\n            value={newTask}\n            onChange={e => setNewTask(e.target.value)}\n            className='tasks__input input'\n            type=\"text\"\n            placeholder={`Create task on '${categoryTitle()}' category`} />\n         <Button\n            onClick={addTask}\n            title={'Create new task'}\n            className={'new-task-btn'}\n         />\n         <hr className='tasks__line' />\n         {allTasks.map(task =>\n            <Task\n               key={task.id}\n               value={task.value}\n               chosenList={chosenList}\n            />\n         )}\n      </div>\n   )\n}\n\nexport default Tasks"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,cAAP;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,IAAP,MAAiB,cAAjB;AACA,OAAOC,WAAP,MAAwB,uBAAxB;;;AAIA,SAASC,KAAT,OAAgD;EAAA;;EAAA,IAAjC;IAAEC,KAAF;IAASC,QAAT;IAAmBC;EAAnB,CAAiC;EAC7C,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,EAAtC;;EAEA,MAAMU,aAAa,GAAG,MAAM;IACzB,IAAIH,UAAU,CAACI,EAAf,EAAmB;MAChB,OAAOJ,UAAU,CAACK,KAAlB;IACF,CAFD,MAEO;MACJ,OAAO,KAAP;IACF;EACH,CAND;;EAQA,MAAMC,OAAO,GAAG,MAAM;IACnBV,WAAW,CAACW,QAAZ,CAAqB,EAArB;EACF,CAFD;;EAIA,oBACG;IAAK,SAAS,EAAC,OAAf;IAAA,wBACG;MAAI,SAAS,EAAC,cAAd;MAAA,UACIJ,aAAa;IADjB;MAAA;MAAA;MAAA;IAAA,QADH,eAKG;MACG,KAAK,EAAEF,OADV;MAEG,QAAQ,EAAEO,CAAC,IAAIN,UAAU,CAACM,CAAC,CAACC,MAAF,CAASC,KAAV,CAF5B;MAGG,SAAS,EAAC,oBAHb;MAIG,IAAI,EAAC,MAJR;MAKG,WAAW,EAAG,mBAAkBP,aAAa,EAAG;IALnD;MAAA;MAAA;MAAA;IAAA,QALH,eAWG,QAAC,MAAD;MACG,OAAO,EAAEG,OADZ;MAEG,KAAK,EAAE,iBAFV;MAGG,SAAS,EAAE;IAHd;MAAA;MAAA;MAAA;IAAA,QAXH,eAgBG;MAAI,SAAS,EAAC;IAAd;MAAA;MAAA;MAAA;IAAA,QAhBH,EAiBIP,QAAQ,CAACY,GAAT,CAAaC,IAAI,iBACf,QAAC,IAAD;MAEG,KAAK,EAAEA,IAAI,CAACF,KAFf;MAGG,UAAU,EAAEV;IAHf,GACQY,IAAI,CAACR,EADb;MAAA;MAAA;MAAA;IAAA,QADF,CAjBJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADH;AA2BF;;GA1CQP,K;;KAAAA,K;AA4CT,eAAeA,KAAf"},"metadata":{},"sourceType":"module"}