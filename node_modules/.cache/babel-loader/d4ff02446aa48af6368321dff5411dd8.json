{"ast":null,"code":"var _jsxFileName = \"/Users/Vitaliy/Desktop/web/react/todoo/src/Components/Tasks/Tasks.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from 'react';\nimport { TodoContext } from '../context';\nimport './Tasks.scss';\nimport Button from '../../UI/Button/Button';\nimport Task from '../Task/Task';\nimport { TaskServiсe, ListServiсe } from '../../API/Serviсe';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Tasks() {\n  _s();\n\n  const {\n    lists,\n    setLists,\n    chosenList,\n    setChosenList,\n    currentPage\n  } = useContext(TodoContext);\n  const [newTask, setNewTask] = useState({// value: '',\n    // done: false,\n    // id: generateId().toString(),\n    // listId: currentPage.toString()\n  });\n\n  const generateId = () => {\n    let newId = 1;\n    lists.map(list => list.tasks.map(task => newId < +task.id ? newId = task.id : ''));\n    console.log(++newId);\n    return ++newId;\n  };\n\n  const addTask = async newTask => {\n    await TaskServiсe.postTask(newTask);\n    lists.forEach(list => {\n      if (+list.id === +newTask.listId) {\n        list.tasks.push(newTask);\n      }\n    });\n    setLists(lists);\n    lists.forEach(list => list.id === chosenList.id ? setChosenList(list) : '');\n    setNewTask({\n      value: '',\n      listId: null\n    });\n  };\n\n  const deleteTask = async deletedTask => {\n    const newList = lists.map(list => {\n      if (list.id === deletedTask.listId) {\n        list.tasks = list.tasks.filter(task => task.id !== deletedTask.id);\n      }\n\n      return list;\n    });\n    setLists(newList);\n    await TaskServiсe.deleteTask(deletedTask);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tasks\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"tasks__title\",\n      children: chosenList.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: newTask.value,\n      onChange: e => setNewTask({\n        value: e.target.value,\n        listId: currentPage.toString(),\n        id: generateId().toString()\n      }),\n      className: \"tasks__input input\",\n      type: \"text\",\n      placeholder: `Create task on '${chosenList.title}' category`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 10\n    }, this), newTask.value && /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => addTask(newTask),\n      title: 'Create new task',\n      className: 'new-task-btn'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n      className: \"tasks__line\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 10\n    }, this), currentPage !== 1 ? chosenList.tasks.map(task => /*#__PURE__*/_jsxDEV(Task, {\n      task: task,\n      deleteTask: () => deleteTask(task)\n    }, task.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 16\n    }, this)) : lists.map(list => list.tasks.map(task => /*#__PURE__*/_jsxDEV(Task, {\n      task: task,\n      title: list.title,\n      list: list,\n      deleteTask: () => deleteTask(task)\n    }, task.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 16\n    }, this)))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 7\n  }, this);\n}\n\n_s(Tasks, \"G+C7pIWGcvAu2F3AKXWd1Ley/NQ=\");\n\n_c = Tasks;\nexport default Tasks;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tasks\");","map":{"version":3,"names":["React","useState","useContext","TodoContext","Button","Task","TaskServiсe","ListServiсe","Tasks","lists","setLists","chosenList","setChosenList","currentPage","newTask","setNewTask","generateId","newId","map","list","tasks","task","id","console","log","addTask","postTask","forEach","listId","push","value","deleteTask","deletedTask","newList","filter","title","e","target","toString"],"sources":["/Users/Vitaliy/Desktop/web/react/todoo/src/Components/Tasks/Tasks.jsx"],"sourcesContent":["import React, { useState, useContext } from 'react'\nimport { TodoContext } from '../context'\nimport './Tasks.scss'\nimport Button from '../../UI/Button/Button'\nimport Task from '../Task/Task'\nimport { TaskServiсe, ListServiсe } from '../../API/Serviсe'\n\n\nfunction Tasks() {\n   const { lists, setLists, chosenList, setChosenList, currentPage } = useContext(TodoContext)\n   const [newTask, setNewTask] = useState({\n      // value: '',\n      // done: false,\n      // id: generateId().toString(),\n      // listId: currentPage.toString()\n\n   })\n\n\n\n   const generateId = () => {\n      let newId = 1\n      lists.map(list => list.tasks.map(task =>\n         newId < +task.id ? newId = task.id : ''\n      ))\n      console.log(++newId)\n      return ++newId\n   }\n\n\n   const addTask = async (newTask) => {\n      await TaskServiсe.postTask(newTask)\n      lists.forEach(list => {\n         if (+list.id === +newTask.listId) {\n            list.tasks.push(newTask)\n         }})\n      setLists(lists)\n      lists.forEach(list => list.id === chosenList.id ? setChosenList(list) : '')\n      setNewTask({ value: '', listId: null })\n   }\n\n   const deleteTask = async (deletedTask) => {\n      const newList =\n         lists.map(list => {\n            if (list.id === deletedTask.listId) {\n               list.tasks = list.tasks.filter(task => task.id !== deletedTask.id)\n            }\n            return list\n         })\n      setLists(newList)\n      await TaskServiсe.deleteTask(deletedTask)\n   }\n\n   return (\n      <div className='tasks' >\n         <h1 className='tasks__title' >\n            {chosenList.title}\n         </h1>\n\n         <input\n            value={newTask.value}\n            onChange={e => setNewTask({ value: e.target.value, listId: currentPage.toString(), id: generateId().toString() })}\n            className='tasks__input input'\n            type=\"text\"\n            placeholder={`Create task on '${chosenList.title}' category`} />\n         {newTask.value &&\n            <Button\n               onClick={() => addTask(newTask)}\n               title={'Create new task'}\n               className={'new-task-btn'}\n            />\n         }\n         <hr className='tasks__line' />\n\n         {currentPage !== 1 ?\n            chosenList.tasks.map(task =>\n               <Task\n                  key={task.id}\n                  task={task}\n                  deleteTask={() => deleteTask(task)}\n               />)\n            :\n            lists.map(list => list.tasks.map(task =>\n               <Task\n                  key={task.id}\n                  task={task}\n                  title={list.title}\n                  list={list}\n                  deleteTask={() => deleteTask(task)}\n               />))\n         }\n      </div>\n   )\n}\n\nexport default Tasks"],"mappings":"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"},"metadata":{},"sourceType":"module"}