{"ast":null,"code":"var _jsxFileName = \"/Users/Vitaliy/Desktop/web/react/todoo/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Categories from \"./Components/Categories/Categories\";\nimport { ListServiсe } from \"./API/Serviсe\";\nimport Tasks from \"./Components/Tasks/Tasks\";\nimport { TodoContext } from './Components/context';\nimport { Route, Routes, useLocation, useNavigate } from 'react-router-dom';\nimport { useFetching } from \"./hooks/useFetching.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [lists, setLists] = useState([]);\n  const [chosenList, setChosenList] = useState([]);\n  const [fetchData, isLoading, error] = useFetching(async () => {\n    const listResponse = await ListServiсe.getLists();\n    setLists(listResponse);\n    setChosenList(listResponse[0]);\n  });\n  const load = isLoading;\n  const er = error;\n  let location = useLocation();\n  const currentPage = +location.pathname.split('/').slice(-1);\n  let navigate = useNavigate();\n  useEffect(() => {\n    // async function fetchData() {\n    //   const listResponse = await ListServiсe.getLists()\n    //   setLists(listResponse)\n    //   setChosenList(listResponse[0])\n    // }\n    fetching(); // fetchData()\n  }, [], [lists, currentPage]);\n  return /*#__PURE__*/_jsxDEV(TodoContext.Provider, {\n    value: {\n      lists,\n      setLists,\n      chosenList,\n      setChosenList,\n      currentPage,\n      navigate\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app\",\n      children: [/*#__PURE__*/_jsxDEV(Categories, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/lists/1\",\n          element: /*#__PURE__*/_jsxDEV(Tasks, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 43\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), lists.map(list => /*#__PURE__*/_jsxDEV(Route, {\n          path: `lists/${list.id}`,\n          element: /*#__PURE__*/_jsxDEV(Tasks, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 24\n          }, this)\n        }, list.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"+qbFjV9lpca57lInUpW0m7RxD9E=\", false, function () {\n  return [useFetching, useLocation, useNavigate];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Categories","ListServiсe","Tasks","TodoContext","Route","Routes","useLocation","useNavigate","useFetching","App","lists","setLists","chosenList","setChosenList","fetchData","isLoading","error","listResponse","getLists","load","er","location","currentPage","pathname","split","slice","navigate","fetching","map","list","id"],"sources":["/Users/Vitaliy/Desktop/web/react/todoo/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Categories from \"./Components/Categories/Categories\";\nimport { ListServiсe } from \"./API/Serviсe\";\nimport Tasks from \"./Components/Tasks/Tasks\";\nimport { TodoContext } from './Components/context'\nimport { Route, Routes, useLocation, useNavigate } from 'react-router-dom'\nimport { useFetching } from \"./hooks/useFetching.js\";\n\nfunction App() {\n  const [lists, setLists] = useState([])\n  const [chosenList, setChosenList] = useState([])\n  const [fetchData, isLoading, error] = useFetching(async () => {\n    const listResponse = await ListServiсe.getLists()\n    setLists(listResponse)\n    setChosenList(listResponse[0])\n  })\n\n  const load = isLoading;\n  const er = error;\n\n  let location = useLocation()\n  const currentPage = +location.pathname.split('/').slice(-1)\n  let navigate = useNavigate()\n\n  useEffect(() => {\n    // async function fetchData() {\n    //   const listResponse = await ListServiсe.getLists()\n    //   setLists(listResponse)\n    //   setChosenList(listResponse[0])\n    // }\n    fetching()\n    // fetchData()\n  }, [], [lists, currentPage])\n\n  return (\n    <TodoContext.Provider value={{\n      lists,\n      setLists,\n      chosenList,\n      setChosenList,\n      currentPage,\n      navigate,\n    }} >\n\n      <div className=\"app\">\n\n        <Categories />\n\n        <Routes>\n          <Route path='/lists/1' element={<Tasks />} />\n\n          {lists.map(list =>\n            <Route\n              key={list.id}\n              path={`lists/${list.id}`}\n              element={<Tasks />} />)\n          }\n        </Routes>\n      </div>\n    </TodoContext.Provider>\n  );\n}\n\nexport default App;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,UAAP,MAAuB,oCAAvB;AACA,SAASC,WAAT,QAA4B,eAA5B;AACA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,SAASC,WAAT,QAA4B,sBAA5B;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,WAAxB,EAAqCC,WAArC,QAAwD,kBAAxD;AACA,SAASC,WAAT,QAA4B,wBAA5B;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EACb,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,CAAC,EAAD,CAAlC;EACA,MAAM,CAACc,UAAD,EAAaC,aAAb,IAA8Bf,QAAQ,CAAC,EAAD,CAA5C;EACA,MAAM,CAACgB,SAAD,EAAYC,SAAZ,EAAuBC,KAAvB,IAAgCR,WAAW,CAAC,YAAY;IAC5D,MAAMS,YAAY,GAAG,MAAMhB,WAAW,CAACiB,QAAZ,EAA3B;IACAP,QAAQ,CAACM,YAAD,CAAR;IACAJ,aAAa,CAACI,YAAY,CAAC,CAAD,CAAb,CAAb;EACD,CAJgD,CAAjD;EAMA,MAAME,IAAI,GAAGJ,SAAb;EACA,MAAMK,EAAE,GAAGJ,KAAX;EAEA,IAAIK,QAAQ,GAAGf,WAAW,EAA1B;EACA,MAAMgB,WAAW,GAAG,CAACD,QAAQ,CAACE,QAAT,CAAkBC,KAAlB,CAAwB,GAAxB,EAA6BC,KAA7B,CAAmC,CAAC,CAApC,CAArB;EACA,IAAIC,QAAQ,GAAGnB,WAAW,EAA1B;EAEAR,SAAS,CAAC,MAAM;IACd;IACA;IACA;IACA;IACA;IACA4B,QAAQ,GANM,CAOd;EACD,CARQ,EAQN,EARM,EAQF,CAACjB,KAAD,EAAQY,WAAR,CARE,CAAT;EAUA,oBACE,QAAC,WAAD,CAAa,QAAb;IAAsB,KAAK,EAAE;MAC3BZ,KAD2B;MAE3BC,QAF2B;MAG3BC,UAH2B;MAI3BC,aAJ2B;MAK3BS,WAL2B;MAM3BI;IAN2B,CAA7B;IAAA,uBASE;MAAK,SAAS,EAAC,KAAf;MAAA,wBAEE,QAAC,UAAD;QAAA;QAAA;QAAA;MAAA,QAFF,eAIE,QAAC,MAAD;QAAA,wBACE,QAAC,KAAD;UAAO,IAAI,EAAC,UAAZ;UAAuB,OAAO,eAAE,QAAC,KAAD;YAAA;YAAA;YAAA;UAAA;QAAhC;UAAA;UAAA;UAAA;QAAA,QADF,EAGGhB,KAAK,CAACkB,GAAN,CAAUC,IAAI,iBACb,QAAC,KAAD;UAEE,IAAI,EAAG,SAAQA,IAAI,CAACC,EAAG,EAFzB;UAGE,OAAO,eAAE,QAAC,KAAD;YAAA;YAAA;YAAA;UAAA;QAHX,GACOD,IAAI,CAACC,EADZ;UAAA;UAAA;UAAA;QAAA,QADD,CAHH;MAAA;QAAA;QAAA;QAAA;MAAA,QAJF;IAAA;MAAA;MAAA;MAAA;IAAA;EATF;IAAA;IAAA;IAAA;EAAA,QADF;AA2BD;;GArDQrB,G;UAG+BD,W,EASvBF,W,EAEAC,W;;;KAdRE,G;AAuDT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}