{"ast":null,"code":"var _jsxFileName = \"/Users/Vitaliy/Desktop/web/react/todoo/src/UI/Checkbox/Checkbox.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { TaskServiсe } from '../../API/Serviсe';\nimport './Checkbox.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Checkbox(_ref) {\n  _s();\n\n  let {\n    task\n  } = _ref;\n  const [isDone, setIsDone] = useState(task.done);\n\n  const toggleDoneParram = () => {\n    console.log();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      id: task.id,\n      checked: isDone,\n      onChange: e => toggleDoneParram(e),\n      className: \"checkbox\",\n      type: \"checkbox\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: task.id,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"check-mark\",\n        src: \"/img/check.svg\",\n        alt: \"checkMark\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 7\n  }, this);\n}\n\n_s(Checkbox, \"DjeZT/HVgs0evm/7aPAouWYYsik=\");\n\n_c = Checkbox;\nexport default Checkbox;\n\nvar _c;\n\n$RefreshReg$(_c, \"Checkbox\");","map":{"version":3,"names":["React","useState","TaskServiсe","Checkbox","task","isDone","setIsDone","done","toggleDoneParram","console","log","id","e"],"sources":["/Users/Vitaliy/Desktop/web/react/todoo/src/UI/Checkbox/Checkbox.jsx"],"sourcesContent":["import React, { useState } from 'react'\nimport { TaskServiсe } from '../../API/Serviсe'\nimport './Checkbox.scss'\n\nfunction Checkbox({ task }) {\n\n   const [isDone, setIsDone] = useState(task.done)\n\n\n\n   const toggleDoneParram = () => {\n     console.log()\n   }\n\n   return (\n      <div >\n         <input id={task.id} checked={isDone} onChange={(e) => toggleDoneParram(e)} className='checkbox' type=\"checkbox\" />\n         <label htmlFor={task.id}>\n            <img className='check-mark' src=\"/img/check.svg\" alt=\"checkMark\" />\n         </label>\n      </div>\n   )\n}\n\nexport default Checkbox"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,QAA4B,mBAA5B;AACA,OAAO,iBAAP;;;AAEA,SAASC,QAAT,OAA4B;EAAA;;EAAA,IAAV;IAAEC;EAAF,CAAU;EAEzB,MAAM,CAACC,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAACG,IAAI,CAACG,IAAN,CAApC;;EAIA,MAAMC,gBAAgB,GAAG,MAAM;IAC7BC,OAAO,CAACC,GAAR;EACD,CAFD;;EAIA,oBACG;IAAA,wBACG;MAAO,EAAE,EAAEN,IAAI,CAACO,EAAhB;MAAoB,OAAO,EAAEN,MAA7B;MAAqC,QAAQ,EAAGO,CAAD,IAAOJ,gBAAgB,CAACI,CAAD,CAAtE;MAA2E,SAAS,EAAC,UAArF;MAAgG,IAAI,EAAC;IAArG;MAAA;MAAA;MAAA;IAAA,QADH,eAEG;MAAO,OAAO,EAAER,IAAI,CAACO,EAArB;MAAA,uBACG;QAAK,SAAS,EAAC,YAAf;QAA4B,GAAG,EAAC,gBAAhC;QAAiD,GAAG,EAAC;MAArD;QAAA;QAAA;QAAA;MAAA;IADH;MAAA;MAAA;MAAA;IAAA,QAFH;EAAA;IAAA;IAAA;IAAA;EAAA,QADH;AAQF;;GAlBQR,Q;;KAAAA,Q;AAoBT,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}